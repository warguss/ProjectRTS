syntax = "proto3";

package server2N;

message GlobalNotice{
	enum NoticeInfo{
		Nothing = 0;
		KillInfo = 1;
		Notice = 2;
		ItemInfo = 3;
	}

	NoticeInfo notiType = 1;
	string notice = 2;
	int32 performer = 3;
	repeated int32 victim = 4;
}

message UserConnection{
	enum ConnectionType{
		Nothing = 0;
		Connect = 1;
		TryConnect = 2;
		AcceptConnect = 3;
		DisConnect = 4;
	}

	repeated int32 connectorId = 1;
	repeated int32 killInfo = 2;
	repeated int32 deathInfo = 3;
	repeated string nickname = 4;
	repeated int32 itemId = 5;

	ConnectionType conType = 6;
}

message EventMove{
	enum Direction{
		Nothing = 0;
		Left = 1;
		Right = 2;
		Down = 3;
		Up = 4;
	}
	Direction type = 5;
}

message EventStop{

}

message EventJump{

}

message EventShoot{
	float angle = 1;
	float damage = 2;
	int32 impact = 3;
	int32 impactAngle = 4;
	int32 weaponId = 5;
	float bulletSpeed = 6;
	float bulletRange = 7;
}

message EventHit{
	int32 attacker = 1;
	float damage = 2;
	int32 impact = 3;
	int32 impactAngle = 4;
	float currentHP = 5;
	int32 hitType = 6;
}

message EventChangeWeapon{
	int32 weaponId = 1;
}

message EventSpawn{
	
}

message EventUserSync{
	float currentHP = 1;
	int32 weaponId = 2;
}

message EventDeath{
	int32 triggerId = 1;
}

message EventItemSpawn
{
	InfoItem item = 1;
	int32 itemId = 2;
}
message EventItemGet
{
	int32 itemid = 1;
}

message InfoItem
{
	enum ItemType
	{
		Recover = 0;
		Weapone = 1;
	}
	
	enum WeaponId
	{
		Nothing = 0;
		Pistol = 1;
		Sniper = 2;
	}
	int32 amount = 4;

	ItemType itemType = 5;
	WeaponId weaponId = 6;
}

message GameEvent{
	enum action{
		Nothing				= 0;
		EventMove			= 100;
		EventStop			= 101;
		EventJump			= 102;
		EventShoot			= 103;
		EventHit			= 104;
		EventSpawn			= 105;
		EventUserSync		= 106;
		EventDeath			= 107;
		EventBullet			= 108;
		EventChangeWeapon	= 109;
		EventItemSpawn		= 110;
		EventItemGet		= 111;

	}
	EventMove moveEvent = 109;
	EventStop stopEvent = 110;
	EventJump jumpEvent = 111;
	EventShoot shootEvent = 112;
	EventHit hitEvent = 113;
	EventSpawn spawnEvent = 114;
	EventUserSync syncEvent = 115;
	EventDeath deathEvent = 116;
	EventChangeWeapon chWeaponEvent = 117;
	EventItemSpawn itemSpawnEvent = 118;
	EventItemGet itemGetEvent = 119;

	action actType = 1;
	int32 actionProperty = 5;
	float EventPositionX = 6;
	float EventPositionY = 7;
	float VelocityX = 8;
	float VelocityY = 9;
	repeated int32 invokerId = 10;
	int32 sectorNo = 11;
	bool isInterested = 12;
}

message PacketBody{
	enum messageType{
		GameEvent		= 0;
		UserConnection	= 10000;
		GlobalNotice	= 10001;
	}
	messageType msgType = 10000; 
	UserConnection connect = 6;
	GlobalNotice notice	= 10001;
	GameEvent event = 7;
	int32 senderId = 8;
}
