// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gameContent.proto

#include "gameContent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace server2N {
class GlobalNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GlobalNotice>
      _instance;
} _GlobalNotice_default_instance_;
class UserConnectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserConnection>
      _instance;
} _UserConnection_default_instance_;
class EventMoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventMove>
      _instance;
} _EventMove_default_instance_;
class EventStopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventStop>
      _instance;
} _EventStop_default_instance_;
class EventJumpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventJump>
      _instance;
} _EventJump_default_instance_;
class EventShootDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventShoot>
      _instance;
} _EventShoot_default_instance_;
class EventHitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventHit>
      _instance;
} _EventHit_default_instance_;
class EventChangeWeaponDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventChangeWeapon>
      _instance;
} _EventChangeWeapon_default_instance_;
class EventSpawnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventSpawn>
      _instance;
} _EventSpawn_default_instance_;
class EventUserSyncDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventUserSync>
      _instance;
} _EventUserSync_default_instance_;
class EventDeathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventDeath>
      _instance;
} _EventDeath_default_instance_;
class EventItemSpawnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventItemSpawn>
      _instance;
} _EventItemSpawn_default_instance_;
class EventItemGetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventItemGet>
      _instance;
} _EventItemGet_default_instance_;
class RequestUserInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestUserInfo>
      _instance;
} _RequestUserInfo_default_instance_;
class InfoItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InfoItem>
      _instance;
} _InfoItem_default_instance_;
class GameEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameEvent>
      _instance;
} _GameEvent_default_instance_;
class SystemEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemEvent>
      _instance;
} _SystemEvent_default_instance_;
class UserEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserEvent>
      _instance;
} _UserEvent_default_instance_;
class PacketBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PacketBody>
      _instance;
} _PacketBody_default_instance_;
}  // namespace server2N
namespace protobuf_gameContent_2eproto {
void InitDefaultsGlobalNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_GlobalNotice_default_instance_;
    new (ptr) ::server2N::GlobalNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::GlobalNotice::InitAsDefaultInstance();
}

void InitDefaultsGlobalNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGlobalNoticeImpl);
}

void InitDefaultsUserConnectionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gameContent_2eproto::InitDefaultsInfoItem();
  {
    void* ptr = &::server2N::_UserConnection_default_instance_;
    new (ptr) ::server2N::UserConnection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::UserConnection::InitAsDefaultInstance();
}

void InitDefaultsUserConnection() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserConnectionImpl);
}

void InitDefaultsEventMoveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_EventMove_default_instance_;
    new (ptr) ::server2N::EventMove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::EventMove::InitAsDefaultInstance();
}

void InitDefaultsEventMove() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventMoveImpl);
}

void InitDefaultsEventStopImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_EventStop_default_instance_;
    new (ptr) ::server2N::EventStop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::EventStop::InitAsDefaultInstance();
}

void InitDefaultsEventStop() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventStopImpl);
}

void InitDefaultsEventJumpImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_EventJump_default_instance_;
    new (ptr) ::server2N::EventJump();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::EventJump::InitAsDefaultInstance();
}

void InitDefaultsEventJump() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventJumpImpl);
}

void InitDefaultsEventShootImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_EventShoot_default_instance_;
    new (ptr) ::server2N::EventShoot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::EventShoot::InitAsDefaultInstance();
}

void InitDefaultsEventShoot() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventShootImpl);
}

void InitDefaultsEventHitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_EventHit_default_instance_;
    new (ptr) ::server2N::EventHit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::EventHit::InitAsDefaultInstance();
}

void InitDefaultsEventHit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventHitImpl);
}

void InitDefaultsEventChangeWeaponImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_EventChangeWeapon_default_instance_;
    new (ptr) ::server2N::EventChangeWeapon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::EventChangeWeapon::InitAsDefaultInstance();
}

void InitDefaultsEventChangeWeapon() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventChangeWeaponImpl);
}

void InitDefaultsEventSpawnImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_EventSpawn_default_instance_;
    new (ptr) ::server2N::EventSpawn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::EventSpawn::InitAsDefaultInstance();
}

void InitDefaultsEventSpawn() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventSpawnImpl);
}

void InitDefaultsEventUserSyncImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_EventUserSync_default_instance_;
    new (ptr) ::server2N::EventUserSync();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::EventUserSync::InitAsDefaultInstance();
}

void InitDefaultsEventUserSync() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventUserSyncImpl);
}

void InitDefaultsEventDeathImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_EventDeath_default_instance_;
    new (ptr) ::server2N::EventDeath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::EventDeath::InitAsDefaultInstance();
}

void InitDefaultsEventDeath() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventDeathImpl);
}

void InitDefaultsEventItemSpawnImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gameContent_2eproto::InitDefaultsInfoItem();
  {
    void* ptr = &::server2N::_EventItemSpawn_default_instance_;
    new (ptr) ::server2N::EventItemSpawn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::EventItemSpawn::InitAsDefaultInstance();
}

void InitDefaultsEventItemSpawn() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventItemSpawnImpl);
}

void InitDefaultsEventItemGetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gameContent_2eproto::InitDefaultsInfoItem();
  {
    void* ptr = &::server2N::_EventItemGet_default_instance_;
    new (ptr) ::server2N::EventItemGet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::EventItemGet::InitAsDefaultInstance();
}

void InitDefaultsEventItemGet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventItemGetImpl);
}

void InitDefaultsRequestUserInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_RequestUserInfo_default_instance_;
    new (ptr) ::server2N::RequestUserInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::RequestUserInfo::InitAsDefaultInstance();
}

void InitDefaultsRequestUserInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestUserInfoImpl);
}

void InitDefaultsInfoItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_InfoItem_default_instance_;
    new (ptr) ::server2N::InfoItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::InfoItem::InitAsDefaultInstance();
}

void InitDefaultsInfoItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInfoItemImpl);
}

void InitDefaultsGameEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gameContent_2eproto::InitDefaultsUserEvent();
  protobuf_gameContent_2eproto::InitDefaultsSystemEvent();
  {
    void* ptr = &::server2N::_GameEvent_default_instance_;
    new (ptr) ::server2N::GameEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::GameEvent::InitAsDefaultInstance();
}

void InitDefaultsGameEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameEventImpl);
}

void InitDefaultsSystemEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gameContent_2eproto::InitDefaultsEventItemSpawn();
  protobuf_gameContent_2eproto::InitDefaultsEventItemGet();
  protobuf_gameContent_2eproto::InitDefaultsRequestUserInfo();
  {
    void* ptr = &::server2N::_SystemEvent_default_instance_;
    new (ptr) ::server2N::SystemEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::SystemEvent::InitAsDefaultInstance();
}

void InitDefaultsSystemEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSystemEventImpl);
}

void InitDefaultsUserEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gameContent_2eproto::InitDefaultsEventMove();
  protobuf_gameContent_2eproto::InitDefaultsEventStop();
  protobuf_gameContent_2eproto::InitDefaultsEventJump();
  protobuf_gameContent_2eproto::InitDefaultsEventShoot();
  protobuf_gameContent_2eproto::InitDefaultsEventHit();
  protobuf_gameContent_2eproto::InitDefaultsEventSpawn();
  protobuf_gameContent_2eproto::InitDefaultsEventUserSync();
  protobuf_gameContent_2eproto::InitDefaultsEventDeath();
  protobuf_gameContent_2eproto::InitDefaultsEventChangeWeapon();
  protobuf_gameContent_2eproto::InitDefaultsEventItemSpawn();
  protobuf_gameContent_2eproto::InitDefaultsEventItemGet();
  {
    void* ptr = &::server2N::_UserEvent_default_instance_;
    new (ptr) ::server2N::UserEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::UserEvent::InitAsDefaultInstance();
}

void InitDefaultsUserEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserEventImpl);
}

void InitDefaultsPacketBodyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gameContent_2eproto::InitDefaultsUserConnection();
  protobuf_gameContent_2eproto::InitDefaultsGlobalNotice();
  protobuf_gameContent_2eproto::InitDefaultsGameEvent();
  {
    void* ptr = &::server2N::_PacketBody_default_instance_;
    new (ptr) ::server2N::PacketBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::PacketBody::InitAsDefaultInstance();
}

void InitDefaultsPacketBody() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPacketBodyImpl);
}

::google::protobuf::Metadata file_level_metadata[19];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GlobalNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GlobalNotice, notitype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GlobalNotice, notice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GlobalNotice, performer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GlobalNotice, victim_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserConnection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserConnection, connectorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserConnection, killinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserConnection, deathinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserConnection, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserConnection, item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserConnection, contype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventMove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventMove, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventStop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventJump, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventShoot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventShoot, shoottype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventShoot, bulletspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventShoot, bulletrange_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventShoot, shootangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventShoot, damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventShoot, impactscale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventHit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventHit, hittype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventHit, damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventHit, impactx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventHit, impacty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventHit, currenthp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventHit, attacker_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventChangeWeapon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventChangeWeapon, weaponid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventSpawn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventUserSync, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventUserSync, currenthp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventUserSync, weaponid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventDeath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventDeath, triggerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventItemSpawn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventItemSpawn, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventItemGet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::EventItemGet, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::RequestUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::RequestUserInfo, targetid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::RequestUserInfo, eventpositionx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::RequestUserInfo, eventpositiony_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::InfoItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::InfoItem, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::InfoItem, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::InfoItem, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::InfoItem, weaponid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::InfoItem, itempositionx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::InfoItem, itempositiony_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, userevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, systemevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, eventpositionx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, eventpositiony_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, velocityx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, velocityy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, invokerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, isinterested_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, islocal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, evttype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::SystemEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::SystemEvent, acttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::SystemEvent, itemspawnevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::SystemEvent, itemgetevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::SystemEvent, requestuserinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, acttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, moveevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, stopevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, jumpevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, shootevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, hitevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, spawnevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, syncevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, deathevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, chweaponevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, itemspawnevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserEvent, itemgetevent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::PacketBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::PacketBody, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::PacketBody, connect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::PacketBody, notice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::PacketBody, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::PacketBody, senderid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::server2N::GlobalNotice)},
  { 9, -1, sizeof(::server2N::UserConnection)},
  { 20, -1, sizeof(::server2N::EventMove)},
  { 26, -1, sizeof(::server2N::EventStop)},
  { 31, -1, sizeof(::server2N::EventJump)},
  { 36, -1, sizeof(::server2N::EventShoot)},
  { 47, -1, sizeof(::server2N::EventHit)},
  { 58, -1, sizeof(::server2N::EventChangeWeapon)},
  { 64, -1, sizeof(::server2N::EventSpawn)},
  { 69, -1, sizeof(::server2N::EventUserSync)},
  { 76, -1, sizeof(::server2N::EventDeath)},
  { 82, -1, sizeof(::server2N::EventItemSpawn)},
  { 88, -1, sizeof(::server2N::EventItemGet)},
  { 94, -1, sizeof(::server2N::RequestUserInfo)},
  { 102, -1, sizeof(::server2N::InfoItem)},
  { 113, -1, sizeof(::server2N::GameEvent)},
  { 128, -1, sizeof(::server2N::SystemEvent)},
  { 137, -1, sizeof(::server2N::UserEvent)},
  { 154, -1, sizeof(::server2N::PacketBody)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_GlobalNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_UserConnection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_EventMove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_EventStop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_EventJump_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_EventShoot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_EventHit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_EventChangeWeapon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_EventSpawn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_EventUserSync_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_EventDeath_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_EventItemSpawn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_EventItemGet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_RequestUserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_InfoItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_GameEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_SystemEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_UserEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_PacketBody_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gameContent.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 19);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021gameContent.proto\022\010server2N\"\271\001\n\014Global"
      "Notice\0223\n\010notiType\030\001 \001(\0162!.server2N.Glob"
      "alNotice.NoticeInfo\022\016\n\006notice\030\002 \001(\t\022\021\n\tp"
      "erformer\030\003 \001(\005\022\016\n\006victim\030\004 \003(\005\"A\n\nNotice"
      "Info\022\013\n\007Nothing\020\000\022\014\n\010KillInfo\020\001\022\n\n\006Notic"
      "e\020\002\022\014\n\010ItemInfo\020\003\"\227\002\n\016UserConnection\022\023\n\013"
      "connectorId\030\001 \003(\005\022\020\n\010killInfo\030\002 \003(\005\022\021\n\td"
      "eathInfo\030\003 \003(\005\022\020\n\010nickname\030\004 \003(\t\022 \n\004item"
      "\030\005 \003(\0132\022.server2N.InfoItem\0228\n\007conType\030\006 "
      "\001(\0162\'.server2N.UserConnection.Connection"
      "Type\"]\n\016ConnectionType\022\013\n\007Nothing\020\000\022\013\n\007C"
      "onnect\020\001\022\016\n\nTryConnect\020\002\022\021\n\rAcceptConnec"
      "t\020\003\022\016\n\nDisConnect\020\004\"y\n\tEventMove\022+\n\004type"
      "\030\005 \001(\0162\035.server2N.EventMove.Direction\"\?\n"
      "\tDirection\022\013\n\007Nothing\020\000\022\010\n\004Left\020\001\022\t\n\005Rig"
      "ht\020\002\022\010\n\004Down\020\003\022\006\n\002Up\020\004\"\013\n\tEventStop\"\013\n\tE"
      "ventJump\"\202\001\n\nEventShoot\022\021\n\tshootType\030\001 \001"
      "(\005\022\023\n\013bulletSpeed\030\002 \001(\002\022\023\n\013bulletRange\030\003"
      " \001(\002\022\022\n\nshootAngle\030\004 \001(\002\022\016\n\006damage\030\005 \001(\002"
      "\022\023\n\013impactScale\030\006 \001(\002\"r\n\010EventHit\022\017\n\007hit"
      "Type\030\001 \001(\005\022\016\n\006damage\030\002 \001(\002\022\017\n\007impactX\030\003 "
      "\001(\002\022\017\n\007impactY\030\004 \001(\002\022\021\n\tcurrentHP\030\005 \001(\002\022"
      "\020\n\010attacker\030\006 \001(\005\"%\n\021EventChangeWeapon\022\020"
      "\n\010weaponId\030\001 \001(\005\"\014\n\nEventSpawn\"4\n\rEventU"
      "serSync\022\021\n\tcurrentHP\030\001 \001(\002\022\020\n\010weaponId\030\002"
      " \001(\005\"\037\n\nEventDeath\022\021\n\ttriggerId\030\001 \001(\005\"2\n"
      "\016EventItemSpawn\022 \n\004item\030\001 \001(\0132\022.server2N"
      ".InfoItem\"0\n\014EventItemGet\022 \n\004item\030\001 \001(\0132"
      "\022.server2N.InfoItem\"S\n\017RequestUserInfo\022\020"
      "\n\010targetID\030\001 \001(\005\022\026\n\016EventPositionX\030\002 \001(\002"
      "\022\026\n\016EventPositionY\030\003 \001(\002\"\215\002\n\010InfoItem\022\016\n"
      "\006amount\030\004 \001(\005\022\016\n\006itemId\030\002 \001(\t\022-\n\010itemTyp"
      "e\030\005 \001(\0162\033.server2N.InfoItem.ItemType\022-\n\010"
      "weaponId\030\006 \001(\0162\033.server2N.InfoItem.Weapo"
      "nId\022\025\n\rItemPositionX\030\007 \001(\002\022\025\n\rItemPositi"
      "onY\030\010 \001(\002\"$\n\010ItemType\022\013\n\007Recover\020\000\022\013\n\007We"
      "apone\020\001\"/\n\010WeaponId\022\013\n\007Nothing\020\000\022\n\n\006Pist"
      "ol\020\001\022\n\n\006Sniper\020\002\"\331\002\n\tGameEvent\022&\n\tuserEv"
      "ent\030\003 \001(\0132\023.server2N.UserEvent\022*\n\013system"
      "Event\030\004 \001(\0132\025.server2N.SystemEvent\022\026\n\016Ev"
      "entPositionX\030\006 \001(\002\022\026\n\016EventPositionY\030\007 \001"
      "(\002\022\021\n\tVelocityX\030\010 \001(\002\022\021\n\tVelocityY\030\t \001(\002"
      "\022\021\n\tinvokerId\030\n \003(\005\022\024\n\014isInterested\030\013 \001("
      "\010\022\017\n\007isLocal\030\014 \001(\010\022.\n\007evtType\030\r \001(\0162\035.se"
      "rver2N.GameEvent.eventType\"8\n\teventType\022"
      "\013\n\007Nothing\020\000\022\r\n\tUserEvent\020\001\022\017\n\013SystemEve"
      "nt\020\002\"\251\002\n\013SystemEvent\022.\n\007actType\030\312\001 \001(\0162\034"
      ".server2N.SystemEvent.action\0221\n\016itemSpaw"
      "nEvent\030\313\001 \001(\0132\030.server2N.EventItemSpawn\022"
      "-\n\014itemGetEvent\030\314\001 \001(\0132\026.server2N.EventI"
      "temGet\0223\n\017requestUserInfo\030\315\001 \001(\0132\031.serve"
      "r2N.RequestUserInfo\"S\n\006action\022\013\n\007Nothing"
      "\020\000\022\023\n\016EventItemSpawn\020\310\001\022\021\n\014EventItemGet\020"
      "\311\001\022\024\n\017RequestUserInfo\020\316\001\"\322\005\n\tUserEvent\022+"
      "\n\007actType\030n \001(\0162\032.server2N.UserEvent.act"
      "ion\022&\n\tmoveEvent\030o \001(\0132\023.server2N.EventM"
      "ove\022&\n\tstopEvent\030p \001(\0132\023.server2N.EventS"
      "top\022&\n\tjumpEvent\030q \001(\0132\023.server2N.EventJ"
      "ump\022(\n\nshootEvent\030r \001(\0132\024.server2N.Event"
      "Shoot\022$\n\010hitEvent\030s \001(\0132\022.server2N.Event"
      "Hit\022(\n\nspawnEvent\030t \001(\0132\024.server2N.Event"
      "Spawn\022*\n\tsyncEvent\030u \001(\0132\027.server2N.Even"
      "tUserSync\022(\n\ndeathEvent\030v \001(\0132\024.server2N"
      ".EventDeath\0222\n\rchWeaponEvent\030w \001(\0132\033.ser"
      "ver2N.EventChangeWeapon\0220\n\016itemSpawnEven"
      "t\030x \001(\0132\030.server2N.EventItemSpawn\022,\n\014ite"
      "mGetEvent\030y \001(\0132\026.server2N.EventItemGet\""
      "\273\001\n\006action\022\013\n\007Nothing\020\000\022\r\n\tEventMove\020d\022\r"
      "\n\tEventStop\020e\022\r\n\tEventJump\020f\022\016\n\nEventSho"
      "ot\020g\022\014\n\010EventHit\020h\022\016\n\nEventSpawn\020i\022\021\n\rEv"
      "entUserSync\020j\022\016\n\nEventDeath\020k\022\017\n\013EventBu"
      "llet\020l\022\025\n\021EventChangeWeapon\020m\"\220\002\n\nPacket"
      "Body\0222\n\007msgType\030\220N \001(\0162 .server2N.Packet"
      "Body.messageType\022)\n\007connect\030\006 \001(\0132\030.serv"
      "er2N.UserConnection\022\'\n\006notice\030\221N \001(\0132\026.s"
      "erver2N.GlobalNotice\022\"\n\005event\030\007 \001(\0132\023.se"
      "rver2N.GameEvent\022\020\n\010senderId\030\010 \001(\005\"D\n\013me"
      "ssageType\022\r\n\tGameEvent\020\000\022\023\n\016UserConnecti"
      "on\020\220N\022\021\n\014GlobalNotice\020\221Nb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3152);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gameContent.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gameContent_2eproto
namespace server2N {
const ::google::protobuf::EnumDescriptor* GlobalNotice_NoticeInfo_descriptor() {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gameContent_2eproto::file_level_enum_descriptors[0];
}
bool GlobalNotice_NoticeInfo_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GlobalNotice_NoticeInfo GlobalNotice::Nothing;
const GlobalNotice_NoticeInfo GlobalNotice::KillInfo;
const GlobalNotice_NoticeInfo GlobalNotice::Notice;
const GlobalNotice_NoticeInfo GlobalNotice::ItemInfo;
const GlobalNotice_NoticeInfo GlobalNotice::NoticeInfo_MIN;
const GlobalNotice_NoticeInfo GlobalNotice::NoticeInfo_MAX;
const int GlobalNotice::NoticeInfo_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UserConnection_ConnectionType_descriptor() {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gameContent_2eproto::file_level_enum_descriptors[1];
}
bool UserConnection_ConnectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserConnection_ConnectionType UserConnection::Nothing;
const UserConnection_ConnectionType UserConnection::Connect;
const UserConnection_ConnectionType UserConnection::TryConnect;
const UserConnection_ConnectionType UserConnection::AcceptConnect;
const UserConnection_ConnectionType UserConnection::DisConnect;
const UserConnection_ConnectionType UserConnection::ConnectionType_MIN;
const UserConnection_ConnectionType UserConnection::ConnectionType_MAX;
const int UserConnection::ConnectionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EventMove_Direction_descriptor() {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gameContent_2eproto::file_level_enum_descriptors[2];
}
bool EventMove_Direction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EventMove_Direction EventMove::Nothing;
const EventMove_Direction EventMove::Left;
const EventMove_Direction EventMove::Right;
const EventMove_Direction EventMove::Down;
const EventMove_Direction EventMove::Up;
const EventMove_Direction EventMove::Direction_MIN;
const EventMove_Direction EventMove::Direction_MAX;
const int EventMove::Direction_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* InfoItem_ItemType_descriptor() {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gameContent_2eproto::file_level_enum_descriptors[3];
}
bool InfoItem_ItemType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InfoItem_ItemType InfoItem::Recover;
const InfoItem_ItemType InfoItem::Weapone;
const InfoItem_ItemType InfoItem::ItemType_MIN;
const InfoItem_ItemType InfoItem::ItemType_MAX;
const int InfoItem::ItemType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* InfoItem_WeaponId_descriptor() {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gameContent_2eproto::file_level_enum_descriptors[4];
}
bool InfoItem_WeaponId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InfoItem_WeaponId InfoItem::Nothing;
const InfoItem_WeaponId InfoItem::Pistol;
const InfoItem_WeaponId InfoItem::Sniper;
const InfoItem_WeaponId InfoItem::WeaponId_MIN;
const InfoItem_WeaponId InfoItem::WeaponId_MAX;
const int InfoItem::WeaponId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GameEvent_eventType_descriptor() {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gameContent_2eproto::file_level_enum_descriptors[5];
}
bool GameEvent_eventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GameEvent_eventType GameEvent::Nothing;
const GameEvent_eventType GameEvent::UserEvent;
const GameEvent_eventType GameEvent::SystemEvent;
const GameEvent_eventType GameEvent::eventType_MIN;
const GameEvent_eventType GameEvent::eventType_MAX;
const int GameEvent::eventType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SystemEvent_action_descriptor() {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gameContent_2eproto::file_level_enum_descriptors[6];
}
bool SystemEvent_action_IsValid(int value) {
  switch (value) {
    case 0:
    case 200:
    case 201:
    case 206:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SystemEvent_action SystemEvent::Nothing;
const SystemEvent_action SystemEvent::EventItemSpawn;
const SystemEvent_action SystemEvent::EventItemGet;
const SystemEvent_action SystemEvent::RequestUserInfo;
const SystemEvent_action SystemEvent::action_MIN;
const SystemEvent_action SystemEvent::action_MAX;
const int SystemEvent::action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UserEvent_action_descriptor() {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gameContent_2eproto::file_level_enum_descriptors[7];
}
bool UserEvent_action_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserEvent_action UserEvent::Nothing;
const UserEvent_action UserEvent::EventMove;
const UserEvent_action UserEvent::EventStop;
const UserEvent_action UserEvent::EventJump;
const UserEvent_action UserEvent::EventShoot;
const UserEvent_action UserEvent::EventHit;
const UserEvent_action UserEvent::EventSpawn;
const UserEvent_action UserEvent::EventUserSync;
const UserEvent_action UserEvent::EventDeath;
const UserEvent_action UserEvent::EventBullet;
const UserEvent_action UserEvent::EventChangeWeapon;
const UserEvent_action UserEvent::action_MIN;
const UserEvent_action UserEvent::action_MAX;
const int UserEvent::action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PacketBody_messageType_descriptor() {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gameContent_2eproto::file_level_enum_descriptors[8];
}
bool PacketBody_messageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 10000:
    case 10001:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PacketBody_messageType PacketBody::GameEvent;
const PacketBody_messageType PacketBody::UserConnection;
const PacketBody_messageType PacketBody::GlobalNotice;
const PacketBody_messageType PacketBody::messageType_MIN;
const PacketBody_messageType PacketBody::messageType_MAX;
const int PacketBody::messageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void GlobalNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GlobalNotice::kNotiTypeFieldNumber;
const int GlobalNotice::kNoticeFieldNumber;
const int GlobalNotice::kPerformerFieldNumber;
const int GlobalNotice::kVictimFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GlobalNotice::GlobalNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsGlobalNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.GlobalNotice)
}
GlobalNotice::GlobalNotice(const GlobalNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      victim_(from.victim_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  notice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.notice().size() > 0) {
    notice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notice_);
  }
  ::memcpy(&notitype_, &from.notitype_,
    static_cast<size_t>(reinterpret_cast<char*>(&performer_) -
    reinterpret_cast<char*>(&notitype_)) + sizeof(performer_));
  // @@protoc_insertion_point(copy_constructor:server2N.GlobalNotice)
}

void GlobalNotice::SharedCtor() {
  notice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&notitype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&performer_) -
      reinterpret_cast<char*>(&notitype_)) + sizeof(performer_));
  _cached_size_ = 0;
}

GlobalNotice::~GlobalNotice() {
  // @@protoc_insertion_point(destructor:server2N.GlobalNotice)
  SharedDtor();
}

void GlobalNotice::SharedDtor() {
  notice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GlobalNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalNotice::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GlobalNotice& GlobalNotice::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsGlobalNotice();
  return *internal_default_instance();
}


void GlobalNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.GlobalNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  victim_.Clear();
  notice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&notitype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&performer_) -
      reinterpret_cast<char*>(&notitype_)) + sizeof(performer_));
  _internal_metadata_.Clear();
}

bool GlobalNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.GlobalNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .server2N.GlobalNotice.NoticeInfo notiType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notitype(static_cast< ::server2N::GlobalNotice_NoticeInfo >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string notice = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notice()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->notice().data(), static_cast<int>(this->notice().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "server2N.GlobalNotice.notice"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 performer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &performer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 victim = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_victim())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_victim())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.GlobalNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.GlobalNotice)
  return false;
#undef DO_
}

void GlobalNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.GlobalNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.GlobalNotice.NoticeInfo notiType = 1;
  if (this->notitype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->notitype(), output);
  }

  // string notice = 2;
  if (this->notice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notice().data(), static_cast<int>(this->notice().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "server2N.GlobalNotice.notice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->notice(), output);
  }

  // int32 performer = 3;
  if (this->performer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->performer(), output);
  }

  // repeated int32 victim = 4;
  if (this->victim_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _victim_cached_byte_size_));
  }
  for (int i = 0, n = this->victim_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->victim(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.GlobalNotice)
}

::google::protobuf::uint8* GlobalNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.GlobalNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.GlobalNotice.NoticeInfo notiType = 1;
  if (this->notitype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->notitype(), target);
  }

  // string notice = 2;
  if (this->notice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notice().data(), static_cast<int>(this->notice().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "server2N.GlobalNotice.notice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->notice(), target);
  }

  // int32 performer = 3;
  if (this->performer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->performer(), target);
  }

  // repeated int32 victim = 4;
  if (this->victim_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _victim_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->victim_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.GlobalNotice)
  return target;
}

size_t GlobalNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.GlobalNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 victim = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->victim_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _victim_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string notice = 2;
  if (this->notice().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->notice());
  }

  // .server2N.GlobalNotice.NoticeInfo notiType = 1;
  if (this->notitype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notitype());
  }

  // int32 performer = 3;
  if (this->performer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->performer());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.GlobalNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GlobalNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.GlobalNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.GlobalNotice)
    MergeFrom(*source);
  }
}

void GlobalNotice::MergeFrom(const GlobalNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.GlobalNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  victim_.MergeFrom(from.victim_);
  if (from.notice().size() > 0) {

    notice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notice_);
  }
  if (from.notitype() != 0) {
    set_notitype(from.notitype());
  }
  if (from.performer() != 0) {
    set_performer(from.performer());
  }
}

void GlobalNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.GlobalNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalNotice::CopyFrom(const GlobalNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.GlobalNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalNotice::IsInitialized() const {
  return true;
}

void GlobalNotice::Swap(GlobalNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GlobalNotice::InternalSwap(GlobalNotice* other) {
  using std::swap;
  victim_.InternalSwap(&other->victim_);
  notice_.Swap(&other->notice_);
  swap(notitype_, other->notitype_);
  swap(performer_, other->performer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GlobalNotice::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserConnection::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserConnection::kConnectorIdFieldNumber;
const int UserConnection::kKillInfoFieldNumber;
const int UserConnection::kDeathInfoFieldNumber;
const int UserConnection::kNicknameFieldNumber;
const int UserConnection::kItemFieldNumber;
const int UserConnection::kConTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserConnection::UserConnection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsUserConnection();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.UserConnection)
}
UserConnection::UserConnection(const UserConnection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      connectorid_(from.connectorid_),
      killinfo_(from.killinfo_),
      deathinfo_(from.deathinfo_),
      nickname_(from.nickname_),
      item_(from.item_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  contype_ = from.contype_;
  // @@protoc_insertion_point(copy_constructor:server2N.UserConnection)
}

void UserConnection::SharedCtor() {
  contype_ = 0;
  _cached_size_ = 0;
}

UserConnection::~UserConnection() {
  // @@protoc_insertion_point(destructor:server2N.UserConnection)
  SharedDtor();
}

void UserConnection::SharedDtor() {
}

void UserConnection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserConnection::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserConnection& UserConnection::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsUserConnection();
  return *internal_default_instance();
}


void UserConnection::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.UserConnection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connectorid_.Clear();
  killinfo_.Clear();
  deathinfo_.Clear();
  nickname_.Clear();
  item_.Clear();
  contype_ = 0;
  _internal_metadata_.Clear();
}

bool UserConnection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.UserConnection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 connectorId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_connectorid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_connectorid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 killInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_killinfo())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_killinfo())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 deathInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_deathinfo())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_deathinfo())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string nickname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname(this->nickname_size() - 1).data(),
            static_cast<int>(this->nickname(this->nickname_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "server2N.UserConnection.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .server2N.InfoItem item = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.UserConnection.ConnectionType conType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_contype(static_cast< ::server2N::UserConnection_ConnectionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.UserConnection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.UserConnection)
  return false;
#undef DO_
}

void UserConnection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.UserConnection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 connectorId = 1;
  if (this->connectorid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _connectorid_cached_byte_size_));
  }
  for (int i = 0, n = this->connectorid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->connectorid(i), output);
  }

  // repeated int32 killInfo = 2;
  if (this->killinfo_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _killinfo_cached_byte_size_));
  }
  for (int i = 0, n = this->killinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->killinfo(i), output);
  }

  // repeated int32 deathInfo = 3;
  if (this->deathinfo_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _deathinfo_cached_byte_size_));
  }
  for (int i = 0, n = this->deathinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->deathinfo(i), output);
  }

  // repeated string nickname = 4;
  for (int i = 0, n = this->nickname_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname(i).data(), static_cast<int>(this->nickname(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "server2N.UserConnection.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->nickname(i), output);
  }

  // repeated .server2N.InfoItem item = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->item(static_cast<int>(i)),
      output);
  }

  // .server2N.UserConnection.ConnectionType conType = 6;
  if (this->contype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->contype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.UserConnection)
}

::google::protobuf::uint8* UserConnection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.UserConnection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 connectorId = 1;
  if (this->connectorid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _connectorid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->connectorid_, target);
  }

  // repeated int32 killInfo = 2;
  if (this->killinfo_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _killinfo_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->killinfo_, target);
  }

  // repeated int32 deathInfo = 3;
  if (this->deathinfo_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _deathinfo_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->deathinfo_, target);
  }

  // repeated string nickname = 4;
  for (int i = 0, n = this->nickname_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname(i).data(), static_cast<int>(this->nickname(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "server2N.UserConnection.nickname");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->nickname(i), target);
  }

  // repeated .server2N.InfoItem item = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->item(static_cast<int>(i)), deterministic, target);
  }

  // .server2N.UserConnection.ConnectionType conType = 6;
  if (this->contype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->contype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.UserConnection)
  return target;
}

size_t UserConnection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.UserConnection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 connectorId = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->connectorid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _connectorid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 killInfo = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->killinfo_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _killinfo_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 deathInfo = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->deathinfo_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _deathinfo_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string nickname = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->nickname_size());
  for (int i = 0, n = this->nickname_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->nickname(i));
  }

  // repeated .server2N.InfoItem item = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item(static_cast<int>(i)));
    }
  }

  // .server2N.UserConnection.ConnectionType conType = 6;
  if (this->contype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->contype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserConnection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.UserConnection)
  GOOGLE_DCHECK_NE(&from, this);
  const UserConnection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserConnection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.UserConnection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.UserConnection)
    MergeFrom(*source);
  }
}

void UserConnection::MergeFrom(const UserConnection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.UserConnection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  connectorid_.MergeFrom(from.connectorid_);
  killinfo_.MergeFrom(from.killinfo_);
  deathinfo_.MergeFrom(from.deathinfo_);
  nickname_.MergeFrom(from.nickname_);
  item_.MergeFrom(from.item_);
  if (from.contype() != 0) {
    set_contype(from.contype());
  }
}

void UserConnection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.UserConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserConnection::CopyFrom(const UserConnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.UserConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserConnection::IsInitialized() const {
  return true;
}

void UserConnection::Swap(UserConnection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserConnection::InternalSwap(UserConnection* other) {
  using std::swap;
  connectorid_.InternalSwap(&other->connectorid_);
  killinfo_.InternalSwap(&other->killinfo_);
  deathinfo_.InternalSwap(&other->deathinfo_);
  nickname_.InternalSwap(CastToBase(&other->nickname_));
  CastToBase(&item_)->InternalSwap(CastToBase(&other->item_));
  swap(contype_, other->contype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserConnection::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventMove::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventMove::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventMove::EventMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsEventMove();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.EventMove)
}
EventMove::EventMove(const EventMove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:server2N.EventMove)
}

void EventMove::SharedCtor() {
  type_ = 0;
  _cached_size_ = 0;
}

EventMove::~EventMove() {
  // @@protoc_insertion_point(destructor:server2N.EventMove)
  SharedDtor();
}

void EventMove::SharedDtor() {
}

void EventMove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventMove::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventMove& EventMove::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsEventMove();
  return *internal_default_instance();
}


void EventMove::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.EventMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear();
}

bool EventMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.EventMove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .server2N.EventMove.Direction type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::server2N::EventMove_Direction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.EventMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.EventMove)
  return false;
#undef DO_
}

void EventMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.EventMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.EventMove.Direction type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.EventMove)
}

::google::protobuf::uint8* EventMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.EventMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.EventMove.Direction type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.EventMove)
  return target;
}

size_t EventMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.EventMove)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .server2N.EventMove.Direction type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.EventMove)
  GOOGLE_DCHECK_NE(&from, this);
  const EventMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.EventMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.EventMove)
    MergeFrom(*source);
  }
}

void EventMove::MergeFrom(const EventMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.EventMove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void EventMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.EventMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventMove::CopyFrom(const EventMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.EventMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventMove::IsInitialized() const {
  return true;
}

void EventMove::Swap(EventMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventMove::InternalSwap(EventMove* other) {
  using std::swap;
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventMove::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventStop::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventStop::EventStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsEventStop();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.EventStop)
}
EventStop::EventStop(const EventStop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:server2N.EventStop)
}

void EventStop::SharedCtor() {
  _cached_size_ = 0;
}

EventStop::~EventStop() {
  // @@protoc_insertion_point(destructor:server2N.EventStop)
  SharedDtor();
}

void EventStop::SharedDtor() {
}

void EventStop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventStop::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventStop& EventStop::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsEventStop();
  return *internal_default_instance();
}


void EventStop::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.EventStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool EventStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.EventStop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.EventStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.EventStop)
  return false;
#undef DO_
}

void EventStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.EventStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.EventStop)
}

::google::protobuf::uint8* EventStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.EventStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.EventStop)
  return target;
}

size_t EventStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.EventStop)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.EventStop)
  GOOGLE_DCHECK_NE(&from, this);
  const EventStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.EventStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.EventStop)
    MergeFrom(*source);
  }
}

void EventStop::MergeFrom(const EventStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.EventStop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EventStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.EventStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventStop::CopyFrom(const EventStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.EventStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventStop::IsInitialized() const {
  return true;
}

void EventStop::Swap(EventStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventStop::InternalSwap(EventStop* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventStop::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventJump::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventJump::EventJump()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsEventJump();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.EventJump)
}
EventJump::EventJump(const EventJump& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:server2N.EventJump)
}

void EventJump::SharedCtor() {
  _cached_size_ = 0;
}

EventJump::~EventJump() {
  // @@protoc_insertion_point(destructor:server2N.EventJump)
  SharedDtor();
}

void EventJump::SharedDtor() {
}

void EventJump::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventJump::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventJump& EventJump::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsEventJump();
  return *internal_default_instance();
}


void EventJump::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.EventJump)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool EventJump::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.EventJump)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.EventJump)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.EventJump)
  return false;
#undef DO_
}

void EventJump::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.EventJump)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.EventJump)
}

::google::protobuf::uint8* EventJump::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.EventJump)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.EventJump)
  return target;
}

size_t EventJump::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.EventJump)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventJump::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.EventJump)
  GOOGLE_DCHECK_NE(&from, this);
  const EventJump* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventJump>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.EventJump)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.EventJump)
    MergeFrom(*source);
  }
}

void EventJump::MergeFrom(const EventJump& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.EventJump)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EventJump::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.EventJump)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventJump::CopyFrom(const EventJump& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.EventJump)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventJump::IsInitialized() const {
  return true;
}

void EventJump::Swap(EventJump* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventJump::InternalSwap(EventJump* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventJump::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventShoot::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventShoot::kShootTypeFieldNumber;
const int EventShoot::kBulletSpeedFieldNumber;
const int EventShoot::kBulletRangeFieldNumber;
const int EventShoot::kShootAngleFieldNumber;
const int EventShoot::kDamageFieldNumber;
const int EventShoot::kImpactScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventShoot::EventShoot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsEventShoot();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.EventShoot)
}
EventShoot::EventShoot(const EventShoot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shoottype_, &from.shoottype_,
    static_cast<size_t>(reinterpret_cast<char*>(&impactscale_) -
    reinterpret_cast<char*>(&shoottype_)) + sizeof(impactscale_));
  // @@protoc_insertion_point(copy_constructor:server2N.EventShoot)
}

void EventShoot::SharedCtor() {
  ::memset(&shoottype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&impactscale_) -
      reinterpret_cast<char*>(&shoottype_)) + sizeof(impactscale_));
  _cached_size_ = 0;
}

EventShoot::~EventShoot() {
  // @@protoc_insertion_point(destructor:server2N.EventShoot)
  SharedDtor();
}

void EventShoot::SharedDtor() {
}

void EventShoot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventShoot::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventShoot& EventShoot::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsEventShoot();
  return *internal_default_instance();
}


void EventShoot::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.EventShoot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&shoottype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&impactscale_) -
      reinterpret_cast<char*>(&shoottype_)) + sizeof(impactscale_));
  _internal_metadata_.Clear();
}

bool EventShoot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.EventShoot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 shootType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shoottype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float bulletSpeed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bulletspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float bulletRange = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bulletrange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float shootAngle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &shootangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float damage = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float impactScale = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &impactscale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.EventShoot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.EventShoot)
  return false;
#undef DO_
}

void EventShoot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.EventShoot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 shootType = 1;
  if (this->shoottype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shoottype(), output);
  }

  // float bulletSpeed = 2;
  if (this->bulletspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->bulletspeed(), output);
  }

  // float bulletRange = 3;
  if (this->bulletrange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->bulletrange(), output);
  }

  // float shootAngle = 4;
  if (this->shootangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->shootangle(), output);
  }

  // float damage = 5;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->damage(), output);
  }

  // float impactScale = 6;
  if (this->impactscale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->impactscale(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.EventShoot)
}

::google::protobuf::uint8* EventShoot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.EventShoot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 shootType = 1;
  if (this->shoottype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shoottype(), target);
  }

  // float bulletSpeed = 2;
  if (this->bulletspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->bulletspeed(), target);
  }

  // float bulletRange = 3;
  if (this->bulletrange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->bulletrange(), target);
  }

  // float shootAngle = 4;
  if (this->shootangle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->shootangle(), target);
  }

  // float damage = 5;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->damage(), target);
  }

  // float impactScale = 6;
  if (this->impactscale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->impactscale(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.EventShoot)
  return target;
}

size_t EventShoot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.EventShoot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 shootType = 1;
  if (this->shoottype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shoottype());
  }

  // float bulletSpeed = 2;
  if (this->bulletspeed() != 0) {
    total_size += 1 + 4;
  }

  // float bulletRange = 3;
  if (this->bulletrange() != 0) {
    total_size += 1 + 4;
  }

  // float shootAngle = 4;
  if (this->shootangle() != 0) {
    total_size += 1 + 4;
  }

  // float damage = 5;
  if (this->damage() != 0) {
    total_size += 1 + 4;
  }

  // float impactScale = 6;
  if (this->impactscale() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventShoot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.EventShoot)
  GOOGLE_DCHECK_NE(&from, this);
  const EventShoot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventShoot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.EventShoot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.EventShoot)
    MergeFrom(*source);
  }
}

void EventShoot::MergeFrom(const EventShoot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.EventShoot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shoottype() != 0) {
    set_shoottype(from.shoottype());
  }
  if (from.bulletspeed() != 0) {
    set_bulletspeed(from.bulletspeed());
  }
  if (from.bulletrange() != 0) {
    set_bulletrange(from.bulletrange());
  }
  if (from.shootangle() != 0) {
    set_shootangle(from.shootangle());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
  if (from.impactscale() != 0) {
    set_impactscale(from.impactscale());
  }
}

void EventShoot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.EventShoot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventShoot::CopyFrom(const EventShoot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.EventShoot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventShoot::IsInitialized() const {
  return true;
}

void EventShoot::Swap(EventShoot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventShoot::InternalSwap(EventShoot* other) {
  using std::swap;
  swap(shoottype_, other->shoottype_);
  swap(bulletspeed_, other->bulletspeed_);
  swap(bulletrange_, other->bulletrange_);
  swap(shootangle_, other->shootangle_);
  swap(damage_, other->damage_);
  swap(impactscale_, other->impactscale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventShoot::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventHit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventHit::kHitTypeFieldNumber;
const int EventHit::kDamageFieldNumber;
const int EventHit::kImpactXFieldNumber;
const int EventHit::kImpactYFieldNumber;
const int EventHit::kCurrentHPFieldNumber;
const int EventHit::kAttackerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventHit::EventHit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsEventHit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.EventHit)
}
EventHit::EventHit(const EventHit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hittype_, &from.hittype_,
    static_cast<size_t>(reinterpret_cast<char*>(&attacker_) -
    reinterpret_cast<char*>(&hittype_)) + sizeof(attacker_));
  // @@protoc_insertion_point(copy_constructor:server2N.EventHit)
}

void EventHit::SharedCtor() {
  ::memset(&hittype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attacker_) -
      reinterpret_cast<char*>(&hittype_)) + sizeof(attacker_));
  _cached_size_ = 0;
}

EventHit::~EventHit() {
  // @@protoc_insertion_point(destructor:server2N.EventHit)
  SharedDtor();
}

void EventHit::SharedDtor() {
}

void EventHit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventHit::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventHit& EventHit::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsEventHit();
  return *internal_default_instance();
}


void EventHit::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.EventHit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hittype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attacker_) -
      reinterpret_cast<char*>(&hittype_)) + sizeof(attacker_));
  _internal_metadata_.Clear();
}

bool EventHit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.EventHit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 hitType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hittype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float damage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float impactX = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &impactx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float impactY = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &impacty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float currentHP = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &currenthp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 attacker = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attacker_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.EventHit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.EventHit)
  return false;
#undef DO_
}

void EventHit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.EventHit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hitType = 1;
  if (this->hittype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hittype(), output);
  }

  // float damage = 2;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->damage(), output);
  }

  // float impactX = 3;
  if (this->impactx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->impactx(), output);
  }

  // float impactY = 4;
  if (this->impacty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->impacty(), output);
  }

  // float currentHP = 5;
  if (this->currenthp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->currenthp(), output);
  }

  // int32 attacker = 6;
  if (this->attacker() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->attacker(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.EventHit)
}

::google::protobuf::uint8* EventHit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.EventHit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hitType = 1;
  if (this->hittype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hittype(), target);
  }

  // float damage = 2;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->damage(), target);
  }

  // float impactX = 3;
  if (this->impactx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->impactx(), target);
  }

  // float impactY = 4;
  if (this->impacty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->impacty(), target);
  }

  // float currentHP = 5;
  if (this->currenthp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->currenthp(), target);
  }

  // int32 attacker = 6;
  if (this->attacker() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->attacker(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.EventHit)
  return target;
}

size_t EventHit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.EventHit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 hitType = 1;
  if (this->hittype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hittype());
  }

  // float damage = 2;
  if (this->damage() != 0) {
    total_size += 1 + 4;
  }

  // float impactX = 3;
  if (this->impactx() != 0) {
    total_size += 1 + 4;
  }

  // float impactY = 4;
  if (this->impacty() != 0) {
    total_size += 1 + 4;
  }

  // float currentHP = 5;
  if (this->currenthp() != 0) {
    total_size += 1 + 4;
  }

  // int32 attacker = 6;
  if (this->attacker() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attacker());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventHit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.EventHit)
  GOOGLE_DCHECK_NE(&from, this);
  const EventHit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventHit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.EventHit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.EventHit)
    MergeFrom(*source);
  }
}

void EventHit::MergeFrom(const EventHit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.EventHit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hittype() != 0) {
    set_hittype(from.hittype());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
  if (from.impactx() != 0) {
    set_impactx(from.impactx());
  }
  if (from.impacty() != 0) {
    set_impacty(from.impacty());
  }
  if (from.currenthp() != 0) {
    set_currenthp(from.currenthp());
  }
  if (from.attacker() != 0) {
    set_attacker(from.attacker());
  }
}

void EventHit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.EventHit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventHit::CopyFrom(const EventHit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.EventHit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventHit::IsInitialized() const {
  return true;
}

void EventHit::Swap(EventHit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventHit::InternalSwap(EventHit* other) {
  using std::swap;
  swap(hittype_, other->hittype_);
  swap(damage_, other->damage_);
  swap(impactx_, other->impactx_);
  swap(impacty_, other->impacty_);
  swap(currenthp_, other->currenthp_);
  swap(attacker_, other->attacker_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventHit::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventChangeWeapon::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventChangeWeapon::kWeaponIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventChangeWeapon::EventChangeWeapon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsEventChangeWeapon();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.EventChangeWeapon)
}
EventChangeWeapon::EventChangeWeapon(const EventChangeWeapon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  weaponid_ = from.weaponid_;
  // @@protoc_insertion_point(copy_constructor:server2N.EventChangeWeapon)
}

void EventChangeWeapon::SharedCtor() {
  weaponid_ = 0;
  _cached_size_ = 0;
}

EventChangeWeapon::~EventChangeWeapon() {
  // @@protoc_insertion_point(destructor:server2N.EventChangeWeapon)
  SharedDtor();
}

void EventChangeWeapon::SharedDtor() {
}

void EventChangeWeapon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventChangeWeapon::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventChangeWeapon& EventChangeWeapon::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsEventChangeWeapon();
  return *internal_default_instance();
}


void EventChangeWeapon::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.EventChangeWeapon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weaponid_ = 0;
  _internal_metadata_.Clear();
}

bool EventChangeWeapon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.EventChangeWeapon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 weaponId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weaponid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.EventChangeWeapon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.EventChangeWeapon)
  return false;
#undef DO_
}

void EventChangeWeapon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.EventChangeWeapon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 weaponId = 1;
  if (this->weaponid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->weaponid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.EventChangeWeapon)
}

::google::protobuf::uint8* EventChangeWeapon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.EventChangeWeapon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 weaponId = 1;
  if (this->weaponid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->weaponid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.EventChangeWeapon)
  return target;
}

size_t EventChangeWeapon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.EventChangeWeapon)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 weaponId = 1;
  if (this->weaponid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weaponid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventChangeWeapon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.EventChangeWeapon)
  GOOGLE_DCHECK_NE(&from, this);
  const EventChangeWeapon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventChangeWeapon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.EventChangeWeapon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.EventChangeWeapon)
    MergeFrom(*source);
  }
}

void EventChangeWeapon::MergeFrom(const EventChangeWeapon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.EventChangeWeapon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.weaponid() != 0) {
    set_weaponid(from.weaponid());
  }
}

void EventChangeWeapon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.EventChangeWeapon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventChangeWeapon::CopyFrom(const EventChangeWeapon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.EventChangeWeapon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventChangeWeapon::IsInitialized() const {
  return true;
}

void EventChangeWeapon::Swap(EventChangeWeapon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventChangeWeapon::InternalSwap(EventChangeWeapon* other) {
  using std::swap;
  swap(weaponid_, other->weaponid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventChangeWeapon::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventSpawn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventSpawn::EventSpawn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsEventSpawn();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.EventSpawn)
}
EventSpawn::EventSpawn(const EventSpawn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:server2N.EventSpawn)
}

void EventSpawn::SharedCtor() {
  _cached_size_ = 0;
}

EventSpawn::~EventSpawn() {
  // @@protoc_insertion_point(destructor:server2N.EventSpawn)
  SharedDtor();
}

void EventSpawn::SharedDtor() {
}

void EventSpawn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventSpawn::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventSpawn& EventSpawn::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsEventSpawn();
  return *internal_default_instance();
}


void EventSpawn::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.EventSpawn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool EventSpawn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.EventSpawn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.EventSpawn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.EventSpawn)
  return false;
#undef DO_
}

void EventSpawn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.EventSpawn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.EventSpawn)
}

::google::protobuf::uint8* EventSpawn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.EventSpawn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.EventSpawn)
  return target;
}

size_t EventSpawn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.EventSpawn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventSpawn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.EventSpawn)
  GOOGLE_DCHECK_NE(&from, this);
  const EventSpawn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventSpawn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.EventSpawn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.EventSpawn)
    MergeFrom(*source);
  }
}

void EventSpawn::MergeFrom(const EventSpawn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.EventSpawn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EventSpawn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.EventSpawn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventSpawn::CopyFrom(const EventSpawn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.EventSpawn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventSpawn::IsInitialized() const {
  return true;
}

void EventSpawn::Swap(EventSpawn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventSpawn::InternalSwap(EventSpawn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventSpawn::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventUserSync::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventUserSync::kCurrentHPFieldNumber;
const int EventUserSync::kWeaponIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventUserSync::EventUserSync()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsEventUserSync();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.EventUserSync)
}
EventUserSync::EventUserSync(const EventUserSync& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&currenthp_, &from.currenthp_,
    static_cast<size_t>(reinterpret_cast<char*>(&weaponid_) -
    reinterpret_cast<char*>(&currenthp_)) + sizeof(weaponid_));
  // @@protoc_insertion_point(copy_constructor:server2N.EventUserSync)
}

void EventUserSync::SharedCtor() {
  ::memset(&currenthp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weaponid_) -
      reinterpret_cast<char*>(&currenthp_)) + sizeof(weaponid_));
  _cached_size_ = 0;
}

EventUserSync::~EventUserSync() {
  // @@protoc_insertion_point(destructor:server2N.EventUserSync)
  SharedDtor();
}

void EventUserSync::SharedDtor() {
}

void EventUserSync::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventUserSync::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventUserSync& EventUserSync::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsEventUserSync();
  return *internal_default_instance();
}


void EventUserSync::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.EventUserSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&currenthp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weaponid_) -
      reinterpret_cast<char*>(&currenthp_)) + sizeof(weaponid_));
  _internal_metadata_.Clear();
}

bool EventUserSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.EventUserSync)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float currentHP = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &currenthp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 weaponId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weaponid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.EventUserSync)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.EventUserSync)
  return false;
#undef DO_
}

void EventUserSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.EventUserSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float currentHP = 1;
  if (this->currenthp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->currenthp(), output);
  }

  // int32 weaponId = 2;
  if (this->weaponid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->weaponid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.EventUserSync)
}

::google::protobuf::uint8* EventUserSync::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.EventUserSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float currentHP = 1;
  if (this->currenthp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->currenthp(), target);
  }

  // int32 weaponId = 2;
  if (this->weaponid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->weaponid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.EventUserSync)
  return target;
}

size_t EventUserSync::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.EventUserSync)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float currentHP = 1;
  if (this->currenthp() != 0) {
    total_size += 1 + 4;
  }

  // int32 weaponId = 2;
  if (this->weaponid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weaponid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventUserSync::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.EventUserSync)
  GOOGLE_DCHECK_NE(&from, this);
  const EventUserSync* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventUserSync>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.EventUserSync)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.EventUserSync)
    MergeFrom(*source);
  }
}

void EventUserSync::MergeFrom(const EventUserSync& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.EventUserSync)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currenthp() != 0) {
    set_currenthp(from.currenthp());
  }
  if (from.weaponid() != 0) {
    set_weaponid(from.weaponid());
  }
}

void EventUserSync::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.EventUserSync)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventUserSync::CopyFrom(const EventUserSync& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.EventUserSync)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventUserSync::IsInitialized() const {
  return true;
}

void EventUserSync::Swap(EventUserSync* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventUserSync::InternalSwap(EventUserSync* other) {
  using std::swap;
  swap(currenthp_, other->currenthp_);
  swap(weaponid_, other->weaponid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventUserSync::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventDeath::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventDeath::kTriggerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventDeath::EventDeath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsEventDeath();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.EventDeath)
}
EventDeath::EventDeath(const EventDeath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  triggerid_ = from.triggerid_;
  // @@protoc_insertion_point(copy_constructor:server2N.EventDeath)
}

void EventDeath::SharedCtor() {
  triggerid_ = 0;
  _cached_size_ = 0;
}

EventDeath::~EventDeath() {
  // @@protoc_insertion_point(destructor:server2N.EventDeath)
  SharedDtor();
}

void EventDeath::SharedDtor() {
}

void EventDeath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventDeath::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventDeath& EventDeath::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsEventDeath();
  return *internal_default_instance();
}


void EventDeath::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.EventDeath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  triggerid_ = 0;
  _internal_metadata_.Clear();
}

bool EventDeath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.EventDeath)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 triggerId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &triggerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.EventDeath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.EventDeath)
  return false;
#undef DO_
}

void EventDeath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.EventDeath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 triggerId = 1;
  if (this->triggerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->triggerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.EventDeath)
}

::google::protobuf::uint8* EventDeath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.EventDeath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 triggerId = 1;
  if (this->triggerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->triggerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.EventDeath)
  return target;
}

size_t EventDeath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.EventDeath)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 triggerId = 1;
  if (this->triggerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->triggerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventDeath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.EventDeath)
  GOOGLE_DCHECK_NE(&from, this);
  const EventDeath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventDeath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.EventDeath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.EventDeath)
    MergeFrom(*source);
  }
}

void EventDeath::MergeFrom(const EventDeath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.EventDeath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.triggerid() != 0) {
    set_triggerid(from.triggerid());
  }
}

void EventDeath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.EventDeath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventDeath::CopyFrom(const EventDeath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.EventDeath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventDeath::IsInitialized() const {
  return true;
}

void EventDeath::Swap(EventDeath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventDeath::InternalSwap(EventDeath* other) {
  using std::swap;
  swap(triggerid_, other->triggerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventDeath::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventItemSpawn::InitAsDefaultInstance() {
  ::server2N::_EventItemSpawn_default_instance_._instance.get_mutable()->item_ = const_cast< ::server2N::InfoItem*>(
      ::server2N::InfoItem::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventItemSpawn::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventItemSpawn::EventItemSpawn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsEventItemSpawn();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.EventItemSpawn)
}
EventItemSpawn::EventItemSpawn(const EventItemSpawn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::server2N::InfoItem(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:server2N.EventItemSpawn)
}

void EventItemSpawn::SharedCtor() {
  item_ = NULL;
  _cached_size_ = 0;
}

EventItemSpawn::~EventItemSpawn() {
  // @@protoc_insertion_point(destructor:server2N.EventItemSpawn)
  SharedDtor();
}

void EventItemSpawn::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void EventItemSpawn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventItemSpawn::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventItemSpawn& EventItemSpawn::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsEventItemSpawn();
  return *internal_default_instance();
}


void EventItemSpawn::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.EventItemSpawn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool EventItemSpawn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.EventItemSpawn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .server2N.InfoItem item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.EventItemSpawn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.EventItemSpawn)
  return false;
#undef DO_
}

void EventItemSpawn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.EventItemSpawn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.InfoItem item = 1;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *item_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.EventItemSpawn)
}

::google::protobuf::uint8* EventItemSpawn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.EventItemSpawn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.InfoItem item = 1;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *item_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.EventItemSpawn)
  return target;
}

size_t EventItemSpawn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.EventItemSpawn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .server2N.InfoItem item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventItemSpawn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.EventItemSpawn)
  GOOGLE_DCHECK_NE(&from, this);
  const EventItemSpawn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventItemSpawn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.EventItemSpawn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.EventItemSpawn)
    MergeFrom(*source);
  }
}

void EventItemSpawn::MergeFrom(const EventItemSpawn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.EventItemSpawn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::server2N::InfoItem::MergeFrom(from.item());
  }
}

void EventItemSpawn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.EventItemSpawn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventItemSpawn::CopyFrom(const EventItemSpawn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.EventItemSpawn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventItemSpawn::IsInitialized() const {
  return true;
}

void EventItemSpawn::Swap(EventItemSpawn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventItemSpawn::InternalSwap(EventItemSpawn* other) {
  using std::swap;
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventItemSpawn::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventItemGet::InitAsDefaultInstance() {
  ::server2N::_EventItemGet_default_instance_._instance.get_mutable()->item_ = const_cast< ::server2N::InfoItem*>(
      ::server2N::InfoItem::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventItemGet::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventItemGet::EventItemGet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsEventItemGet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.EventItemGet)
}
EventItemGet::EventItemGet(const EventItemGet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::server2N::InfoItem(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:server2N.EventItemGet)
}

void EventItemGet::SharedCtor() {
  item_ = NULL;
  _cached_size_ = 0;
}

EventItemGet::~EventItemGet() {
  // @@protoc_insertion_point(destructor:server2N.EventItemGet)
  SharedDtor();
}

void EventItemGet::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void EventItemGet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventItemGet::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventItemGet& EventItemGet::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsEventItemGet();
  return *internal_default_instance();
}


void EventItemGet::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.EventItemGet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool EventItemGet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.EventItemGet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .server2N.InfoItem item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.EventItemGet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.EventItemGet)
  return false;
#undef DO_
}

void EventItemGet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.EventItemGet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.InfoItem item = 1;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *item_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.EventItemGet)
}

::google::protobuf::uint8* EventItemGet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.EventItemGet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.InfoItem item = 1;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *item_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.EventItemGet)
  return target;
}

size_t EventItemGet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.EventItemGet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .server2N.InfoItem item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventItemGet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.EventItemGet)
  GOOGLE_DCHECK_NE(&from, this);
  const EventItemGet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventItemGet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.EventItemGet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.EventItemGet)
    MergeFrom(*source);
  }
}

void EventItemGet::MergeFrom(const EventItemGet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.EventItemGet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::server2N::InfoItem::MergeFrom(from.item());
  }
}

void EventItemGet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.EventItemGet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventItemGet::CopyFrom(const EventItemGet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.EventItemGet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventItemGet::IsInitialized() const {
  return true;
}

void EventItemGet::Swap(EventItemGet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventItemGet::InternalSwap(EventItemGet* other) {
  using std::swap;
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventItemGet::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RequestUserInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestUserInfo::kTargetIDFieldNumber;
const int RequestUserInfo::kEventPositionXFieldNumber;
const int RequestUserInfo::kEventPositionYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestUserInfo::RequestUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsRequestUserInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.RequestUserInfo)
}
RequestUserInfo::RequestUserInfo(const RequestUserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&eventpositiony_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(eventpositiony_));
  // @@protoc_insertion_point(copy_constructor:server2N.RequestUserInfo)
}

void RequestUserInfo::SharedCtor() {
  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eventpositiony_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(eventpositiony_));
  _cached_size_ = 0;
}

RequestUserInfo::~RequestUserInfo() {
  // @@protoc_insertion_point(destructor:server2N.RequestUserInfo)
  SharedDtor();
}

void RequestUserInfo::SharedDtor() {
}

void RequestUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestUserInfo::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestUserInfo& RequestUserInfo::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsRequestUserInfo();
  return *internal_default_instance();
}


void RequestUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.RequestUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eventpositiony_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(eventpositiony_));
  _internal_metadata_.Clear();
}

bool RequestUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.RequestUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 targetID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float EventPositionX = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &eventpositionx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float EventPositionY = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &eventpositiony_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.RequestUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.RequestUserInfo)
  return false;
#undef DO_
}

void RequestUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.RequestUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 targetID = 1;
  if (this->targetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->targetid(), output);
  }

  // float EventPositionX = 2;
  if (this->eventpositionx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->eventpositionx(), output);
  }

  // float EventPositionY = 3;
  if (this->eventpositiony() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->eventpositiony(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.RequestUserInfo)
}

::google::protobuf::uint8* RequestUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.RequestUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 targetID = 1;
  if (this->targetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->targetid(), target);
  }

  // float EventPositionX = 2;
  if (this->eventpositionx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->eventpositionx(), target);
  }

  // float EventPositionY = 3;
  if (this->eventpositiony() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->eventpositiony(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.RequestUserInfo)
  return target;
}

size_t RequestUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.RequestUserInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 targetID = 1;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetid());
  }

  // float EventPositionX = 2;
  if (this->eventpositionx() != 0) {
    total_size += 1 + 4;
  }

  // float EventPositionY = 3;
  if (this->eventpositiony() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.RequestUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestUserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.RequestUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.RequestUserInfo)
    MergeFrom(*source);
  }
}

void RequestUserInfo::MergeFrom(const RequestUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.RequestUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetid() != 0) {
    set_targetid(from.targetid());
  }
  if (from.eventpositionx() != 0) {
    set_eventpositionx(from.eventpositionx());
  }
  if (from.eventpositiony() != 0) {
    set_eventpositiony(from.eventpositiony());
  }
}

void RequestUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.RequestUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestUserInfo::CopyFrom(const RequestUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.RequestUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestUserInfo::IsInitialized() const {
  return true;
}

void RequestUserInfo::Swap(RequestUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestUserInfo::InternalSwap(RequestUserInfo* other) {
  using std::swap;
  swap(targetid_, other->targetid_);
  swap(eventpositionx_, other->eventpositionx_);
  swap(eventpositiony_, other->eventpositiony_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestUserInfo::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InfoItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoItem::kAmountFieldNumber;
const int InfoItem::kItemIdFieldNumber;
const int InfoItem::kItemTypeFieldNumber;
const int InfoItem::kWeaponIdFieldNumber;
const int InfoItem::kItemPositionXFieldNumber;
const int InfoItem::kItemPositionYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoItem::InfoItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsInfoItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.InfoItem)
}
InfoItem::InfoItem(const InfoItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  itemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.itemid().size() > 0) {
    itemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.itemid_);
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&itempositiony_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(itempositiony_));
  // @@protoc_insertion_point(copy_constructor:server2N.InfoItem)
}

void InfoItem::SharedCtor() {
  itemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itempositiony_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(itempositiony_));
  _cached_size_ = 0;
}

InfoItem::~InfoItem() {
  // @@protoc_insertion_point(destructor:server2N.InfoItem)
  SharedDtor();
}

void InfoItem::SharedDtor() {
  itemid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoItem::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InfoItem& InfoItem::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsInfoItem();
  return *internal_default_instance();
}


void InfoItem::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.InfoItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itempositiony_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(itempositiony_));
  _internal_metadata_.Clear();
}

bool InfoItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.InfoItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string itemId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->itemid().data(), static_cast<int>(this->itemid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "server2N.InfoItem.itemId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.InfoItem.ItemType itemType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_itemtype(static_cast< ::server2N::InfoItem_ItemType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.InfoItem.WeaponId weaponId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_weaponid(static_cast< ::server2N::InfoItem_WeaponId >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ItemPositionX = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &itempositionx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ItemPositionY = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &itempositiony_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.InfoItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.InfoItem)
  return false;
#undef DO_
}

void InfoItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.InfoItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string itemId = 2;
  if (this->itemid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->itemid().data(), static_cast<int>(this->itemid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "server2N.InfoItem.itemId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->itemid(), output);
  }

  // int32 amount = 4;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->amount(), output);
  }

  // .server2N.InfoItem.ItemType itemType = 5;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->itemtype(), output);
  }

  // .server2N.InfoItem.WeaponId weaponId = 6;
  if (this->weaponid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->weaponid(), output);
  }

  // float ItemPositionX = 7;
  if (this->itempositionx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->itempositionx(), output);
  }

  // float ItemPositionY = 8;
  if (this->itempositiony() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->itempositiony(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.InfoItem)
}

::google::protobuf::uint8* InfoItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.InfoItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string itemId = 2;
  if (this->itemid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->itemid().data(), static_cast<int>(this->itemid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "server2N.InfoItem.itemId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->itemid(), target);
  }

  // int32 amount = 4;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->amount(), target);
  }

  // .server2N.InfoItem.ItemType itemType = 5;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->itemtype(), target);
  }

  // .server2N.InfoItem.WeaponId weaponId = 6;
  if (this->weaponid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->weaponid(), target);
  }

  // float ItemPositionX = 7;
  if (this->itempositionx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->itempositionx(), target);
  }

  // float ItemPositionY = 8;
  if (this->itempositiony() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->itempositiony(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.InfoItem)
  return target;
}

size_t InfoItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.InfoItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string itemId = 2;
  if (this->itemid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->itemid());
  }

  // int32 amount = 4;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());
  }

  // .server2N.InfoItem.ItemType itemType = 5;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemtype());
  }

  // .server2N.InfoItem.WeaponId weaponId = 6;
  if (this->weaponid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->weaponid());
  }

  // float ItemPositionX = 7;
  if (this->itempositionx() != 0) {
    total_size += 1 + 4;
  }

  // float ItemPositionY = 8;
  if (this->itempositiony() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.InfoItem)
  GOOGLE_DCHECK_NE(&from, this);
  const InfoItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.InfoItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.InfoItem)
    MergeFrom(*source);
  }
}

void InfoItem::MergeFrom(const InfoItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.InfoItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.itemid().size() > 0) {

    itemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.itemid_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
  if (from.weaponid() != 0) {
    set_weaponid(from.weaponid());
  }
  if (from.itempositionx() != 0) {
    set_itempositionx(from.itempositionx());
  }
  if (from.itempositiony() != 0) {
    set_itempositiony(from.itempositiony());
  }
}

void InfoItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.InfoItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoItem::CopyFrom(const InfoItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.InfoItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoItem::IsInitialized() const {
  return true;
}

void InfoItem::Swap(InfoItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoItem::InternalSwap(InfoItem* other) {
  using std::swap;
  itemid_.Swap(&other->itemid_);
  swap(amount_, other->amount_);
  swap(itemtype_, other->itemtype_);
  swap(weaponid_, other->weaponid_);
  swap(itempositionx_, other->itempositionx_);
  swap(itempositiony_, other->itempositiony_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoItem::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameEvent::InitAsDefaultInstance() {
  ::server2N::_GameEvent_default_instance_._instance.get_mutable()->userevent_ = const_cast< ::server2N::UserEvent*>(
      ::server2N::UserEvent::internal_default_instance());
  ::server2N::_GameEvent_default_instance_._instance.get_mutable()->systemevent_ = const_cast< ::server2N::SystemEvent*>(
      ::server2N::SystemEvent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameEvent::kUserEventFieldNumber;
const int GameEvent::kSystemEventFieldNumber;
const int GameEvent::kEventPositionXFieldNumber;
const int GameEvent::kEventPositionYFieldNumber;
const int GameEvent::kVelocityXFieldNumber;
const int GameEvent::kVelocityYFieldNumber;
const int GameEvent::kInvokerIdFieldNumber;
const int GameEvent::kIsInterestedFieldNumber;
const int GameEvent::kIsLocalFieldNumber;
const int GameEvent::kEvtTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameEvent::GameEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsGameEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.GameEvent)
}
GameEvent::GameEvent(const GameEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      invokerid_(from.invokerid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_userevent()) {
    userevent_ = new ::server2N::UserEvent(*from.userevent_);
  } else {
    userevent_ = NULL;
  }
  if (from.has_systemevent()) {
    systemevent_ = new ::server2N::SystemEvent(*from.systemevent_);
  } else {
    systemevent_ = NULL;
  }
  ::memcpy(&eventpositionx_, &from.eventpositionx_,
    static_cast<size_t>(reinterpret_cast<char*>(&evttype_) -
    reinterpret_cast<char*>(&eventpositionx_)) + sizeof(evttype_));
  // @@protoc_insertion_point(copy_constructor:server2N.GameEvent)
}

void GameEvent::SharedCtor() {
  ::memset(&userevent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&evttype_) -
      reinterpret_cast<char*>(&userevent_)) + sizeof(evttype_));
  _cached_size_ = 0;
}

GameEvent::~GameEvent() {
  // @@protoc_insertion_point(destructor:server2N.GameEvent)
  SharedDtor();
}

void GameEvent::SharedDtor() {
  if (this != internal_default_instance()) delete userevent_;
  if (this != internal_default_instance()) delete systemevent_;
}

void GameEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameEvent::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameEvent& GameEvent::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsGameEvent();
  return *internal_default_instance();
}


void GameEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.GameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invokerid_.Clear();
  if (GetArenaNoVirtual() == NULL && userevent_ != NULL) {
    delete userevent_;
  }
  userevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && systemevent_ != NULL) {
    delete systemevent_;
  }
  systemevent_ = NULL;
  ::memset(&eventpositionx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&evttype_) -
      reinterpret_cast<char*>(&eventpositionx_)) + sizeof(evttype_));
  _internal_metadata_.Clear();
}

bool GameEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.GameEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .server2N.UserEvent userEvent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_userevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.SystemEvent systemEvent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_systemevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float EventPositionX = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &eventpositionx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float EventPositionY = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &eventpositiony_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float VelocityX = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &velocityx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float VelocityY = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &velocityy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 invokerId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_invokerid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82u, input, this->mutable_invokerid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isInterested = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isinterested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isLocal = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islocal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.GameEvent.eventType evtType = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_evttype(static_cast< ::server2N::GameEvent_eventType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.GameEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.GameEvent)
  return false;
#undef DO_
}

void GameEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.GameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.UserEvent userEvent = 3;
  if (this->has_userevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *userevent_, output);
  }

  // .server2N.SystemEvent systemEvent = 4;
  if (this->has_systemevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *systemevent_, output);
  }

  // float EventPositionX = 6;
  if (this->eventpositionx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->eventpositionx(), output);
  }

  // float EventPositionY = 7;
  if (this->eventpositiony() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->eventpositiony(), output);
  }

  // float VelocityX = 8;
  if (this->velocityx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->velocityx(), output);
  }

  // float VelocityY = 9;
  if (this->velocityy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->velocityy(), output);
  }

  // repeated int32 invokerId = 10;
  if (this->invokerid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _invokerid_cached_byte_size_));
  }
  for (int i = 0, n = this->invokerid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->invokerid(i), output);
  }

  // bool isInterested = 11;
  if (this->isinterested() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->isinterested(), output);
  }

  // bool isLocal = 12;
  if (this->islocal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->islocal(), output);
  }

  // .server2N.GameEvent.eventType evtType = 13;
  if (this->evttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->evttype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.GameEvent)
}

::google::protobuf::uint8* GameEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.GameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.UserEvent userEvent = 3;
  if (this->has_userevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *userevent_, deterministic, target);
  }

  // .server2N.SystemEvent systemEvent = 4;
  if (this->has_systemevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *systemevent_, deterministic, target);
  }

  // float EventPositionX = 6;
  if (this->eventpositionx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->eventpositionx(), target);
  }

  // float EventPositionY = 7;
  if (this->eventpositiony() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->eventpositiony(), target);
  }

  // float VelocityX = 8;
  if (this->velocityx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->velocityx(), target);
  }

  // float VelocityY = 9;
  if (this->velocityy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->velocityy(), target);
  }

  // repeated int32 invokerId = 10;
  if (this->invokerid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _invokerid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->invokerid_, target);
  }

  // bool isInterested = 11;
  if (this->isinterested() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->isinterested(), target);
  }

  // bool isLocal = 12;
  if (this->islocal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->islocal(), target);
  }

  // .server2N.GameEvent.eventType evtType = 13;
  if (this->evttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->evttype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.GameEvent)
  return target;
}

size_t GameEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.GameEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 invokerId = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->invokerid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _invokerid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .server2N.UserEvent userEvent = 3;
  if (this->has_userevent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *userevent_);
  }

  // .server2N.SystemEvent systemEvent = 4;
  if (this->has_systemevent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *systemevent_);
  }

  // float EventPositionX = 6;
  if (this->eventpositionx() != 0) {
    total_size += 1 + 4;
  }

  // float EventPositionY = 7;
  if (this->eventpositiony() != 0) {
    total_size += 1 + 4;
  }

  // float VelocityX = 8;
  if (this->velocityx() != 0) {
    total_size += 1 + 4;
  }

  // float VelocityY = 9;
  if (this->velocityy() != 0) {
    total_size += 1 + 4;
  }

  // bool isInterested = 11;
  if (this->isinterested() != 0) {
    total_size += 1 + 1;
  }

  // bool isLocal = 12;
  if (this->islocal() != 0) {
    total_size += 1 + 1;
  }

  // .server2N.GameEvent.eventType evtType = 13;
  if (this->evttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->evttype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.GameEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const GameEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.GameEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.GameEvent)
    MergeFrom(*source);
  }
}

void GameEvent::MergeFrom(const GameEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.GameEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  invokerid_.MergeFrom(from.invokerid_);
  if (from.has_userevent()) {
    mutable_userevent()->::server2N::UserEvent::MergeFrom(from.userevent());
  }
  if (from.has_systemevent()) {
    mutable_systemevent()->::server2N::SystemEvent::MergeFrom(from.systemevent());
  }
  if (from.eventpositionx() != 0) {
    set_eventpositionx(from.eventpositionx());
  }
  if (from.eventpositiony() != 0) {
    set_eventpositiony(from.eventpositiony());
  }
  if (from.velocityx() != 0) {
    set_velocityx(from.velocityx());
  }
  if (from.velocityy() != 0) {
    set_velocityy(from.velocityy());
  }
  if (from.isinterested() != 0) {
    set_isinterested(from.isinterested());
  }
  if (from.islocal() != 0) {
    set_islocal(from.islocal());
  }
  if (from.evttype() != 0) {
    set_evttype(from.evttype());
  }
}

void GameEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.GameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameEvent::CopyFrom(const GameEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.GameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameEvent::IsInitialized() const {
  return true;
}

void GameEvent::Swap(GameEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameEvent::InternalSwap(GameEvent* other) {
  using std::swap;
  invokerid_.InternalSwap(&other->invokerid_);
  swap(userevent_, other->userevent_);
  swap(systemevent_, other->systemevent_);
  swap(eventpositionx_, other->eventpositionx_);
  swap(eventpositiony_, other->eventpositiony_);
  swap(velocityx_, other->velocityx_);
  swap(velocityy_, other->velocityy_);
  swap(isinterested_, other->isinterested_);
  swap(islocal_, other->islocal_);
  swap(evttype_, other->evttype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameEvent::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SystemEvent::InitAsDefaultInstance() {
  ::server2N::_SystemEvent_default_instance_._instance.get_mutable()->itemspawnevent_ = const_cast< ::server2N::EventItemSpawn*>(
      ::server2N::EventItemSpawn::internal_default_instance());
  ::server2N::_SystemEvent_default_instance_._instance.get_mutable()->itemgetevent_ = const_cast< ::server2N::EventItemGet*>(
      ::server2N::EventItemGet::internal_default_instance());
  ::server2N::_SystemEvent_default_instance_._instance.get_mutable()->requestuserinfo_ = const_cast< ::server2N::RequestUserInfo*>(
      ::server2N::RequestUserInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemEvent::kActTypeFieldNumber;
const int SystemEvent::kItemSpawnEventFieldNumber;
const int SystemEvent::kItemGetEventFieldNumber;
const int SystemEvent::kRequestUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemEvent::SystemEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsSystemEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.SystemEvent)
}
SystemEvent::SystemEvent(const SystemEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_itemspawnevent()) {
    itemspawnevent_ = new ::server2N::EventItemSpawn(*from.itemspawnevent_);
  } else {
    itemspawnevent_ = NULL;
  }
  if (from.has_itemgetevent()) {
    itemgetevent_ = new ::server2N::EventItemGet(*from.itemgetevent_);
  } else {
    itemgetevent_ = NULL;
  }
  if (from.has_requestuserinfo()) {
    requestuserinfo_ = new ::server2N::RequestUserInfo(*from.requestuserinfo_);
  } else {
    requestuserinfo_ = NULL;
  }
  acttype_ = from.acttype_;
  // @@protoc_insertion_point(copy_constructor:server2N.SystemEvent)
}

void SystemEvent::SharedCtor() {
  ::memset(&itemspawnevent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acttype_) -
      reinterpret_cast<char*>(&itemspawnevent_)) + sizeof(acttype_));
  _cached_size_ = 0;
}

SystemEvent::~SystemEvent() {
  // @@protoc_insertion_point(destructor:server2N.SystemEvent)
  SharedDtor();
}

void SystemEvent::SharedDtor() {
  if (this != internal_default_instance()) delete itemspawnevent_;
  if (this != internal_default_instance()) delete itemgetevent_;
  if (this != internal_default_instance()) delete requestuserinfo_;
}

void SystemEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemEvent::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SystemEvent& SystemEvent::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsSystemEvent();
  return *internal_default_instance();
}


void SystemEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.SystemEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && itemspawnevent_ != NULL) {
    delete itemspawnevent_;
  }
  itemspawnevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && itemgetevent_ != NULL) {
    delete itemgetevent_;
  }
  itemgetevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && requestuserinfo_ != NULL) {
    delete requestuserinfo_;
  }
  requestuserinfo_ = NULL;
  acttype_ = 0;
  _internal_metadata_.Clear();
}

bool SystemEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.SystemEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .server2N.SystemEvent.action actType = 202;
      case 202: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 1616 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_acttype(static_cast< ::server2N::SystemEvent_action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventItemSpawn itemSpawnEvent = 203;
      case 203: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 1626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_itemspawnevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventItemGet itemGetEvent = 204;
      case 204: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_itemgetevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.RequestUserInfo requestUserInfo = 205;
      case 205: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_requestuserinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.SystemEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.SystemEvent)
  return false;
#undef DO_
}

void SystemEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.SystemEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.SystemEvent.action actType = 202;
  if (this->acttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      202, this->acttype(), output);
  }

  // .server2N.EventItemSpawn itemSpawnEvent = 203;
  if (this->has_itemspawnevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      203, *itemspawnevent_, output);
  }

  // .server2N.EventItemGet itemGetEvent = 204;
  if (this->has_itemgetevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      204, *itemgetevent_, output);
  }

  // .server2N.RequestUserInfo requestUserInfo = 205;
  if (this->has_requestuserinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      205, *requestuserinfo_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.SystemEvent)
}

::google::protobuf::uint8* SystemEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.SystemEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.SystemEvent.action actType = 202;
  if (this->acttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      202, this->acttype(), target);
  }

  // .server2N.EventItemSpawn itemSpawnEvent = 203;
  if (this->has_itemspawnevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        203, *itemspawnevent_, deterministic, target);
  }

  // .server2N.EventItemGet itemGetEvent = 204;
  if (this->has_itemgetevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        204, *itemgetevent_, deterministic, target);
  }

  // .server2N.RequestUserInfo requestUserInfo = 205;
  if (this->has_requestuserinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        205, *requestuserinfo_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.SystemEvent)
  return target;
}

size_t SystemEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.SystemEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .server2N.EventItemSpawn itemSpawnEvent = 203;
  if (this->has_itemspawnevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *itemspawnevent_);
  }

  // .server2N.EventItemGet itemGetEvent = 204;
  if (this->has_itemgetevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *itemgetevent_);
  }

  // .server2N.RequestUserInfo requestUserInfo = 205;
  if (this->has_requestuserinfo()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *requestuserinfo_);
  }

  // .server2N.SystemEvent.action actType = 202;
  if (this->acttype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->acttype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.SystemEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.SystemEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.SystemEvent)
    MergeFrom(*source);
  }
}

void SystemEvent::MergeFrom(const SystemEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.SystemEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_itemspawnevent()) {
    mutable_itemspawnevent()->::server2N::EventItemSpawn::MergeFrom(from.itemspawnevent());
  }
  if (from.has_itemgetevent()) {
    mutable_itemgetevent()->::server2N::EventItemGet::MergeFrom(from.itemgetevent());
  }
  if (from.has_requestuserinfo()) {
    mutable_requestuserinfo()->::server2N::RequestUserInfo::MergeFrom(from.requestuserinfo());
  }
  if (from.acttype() != 0) {
    set_acttype(from.acttype());
  }
}

void SystemEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.SystemEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemEvent::CopyFrom(const SystemEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.SystemEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemEvent::IsInitialized() const {
  return true;
}

void SystemEvent::Swap(SystemEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemEvent::InternalSwap(SystemEvent* other) {
  using std::swap;
  swap(itemspawnevent_, other->itemspawnevent_);
  swap(itemgetevent_, other->itemgetevent_);
  swap(requestuserinfo_, other->requestuserinfo_);
  swap(acttype_, other->acttype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SystemEvent::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserEvent::InitAsDefaultInstance() {
  ::server2N::_UserEvent_default_instance_._instance.get_mutable()->moveevent_ = const_cast< ::server2N::EventMove*>(
      ::server2N::EventMove::internal_default_instance());
  ::server2N::_UserEvent_default_instance_._instance.get_mutable()->stopevent_ = const_cast< ::server2N::EventStop*>(
      ::server2N::EventStop::internal_default_instance());
  ::server2N::_UserEvent_default_instance_._instance.get_mutable()->jumpevent_ = const_cast< ::server2N::EventJump*>(
      ::server2N::EventJump::internal_default_instance());
  ::server2N::_UserEvent_default_instance_._instance.get_mutable()->shootevent_ = const_cast< ::server2N::EventShoot*>(
      ::server2N::EventShoot::internal_default_instance());
  ::server2N::_UserEvent_default_instance_._instance.get_mutable()->hitevent_ = const_cast< ::server2N::EventHit*>(
      ::server2N::EventHit::internal_default_instance());
  ::server2N::_UserEvent_default_instance_._instance.get_mutable()->spawnevent_ = const_cast< ::server2N::EventSpawn*>(
      ::server2N::EventSpawn::internal_default_instance());
  ::server2N::_UserEvent_default_instance_._instance.get_mutable()->syncevent_ = const_cast< ::server2N::EventUserSync*>(
      ::server2N::EventUserSync::internal_default_instance());
  ::server2N::_UserEvent_default_instance_._instance.get_mutable()->deathevent_ = const_cast< ::server2N::EventDeath*>(
      ::server2N::EventDeath::internal_default_instance());
  ::server2N::_UserEvent_default_instance_._instance.get_mutable()->chweaponevent_ = const_cast< ::server2N::EventChangeWeapon*>(
      ::server2N::EventChangeWeapon::internal_default_instance());
  ::server2N::_UserEvent_default_instance_._instance.get_mutable()->itemspawnevent_ = const_cast< ::server2N::EventItemSpawn*>(
      ::server2N::EventItemSpawn::internal_default_instance());
  ::server2N::_UserEvent_default_instance_._instance.get_mutable()->itemgetevent_ = const_cast< ::server2N::EventItemGet*>(
      ::server2N::EventItemGet::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserEvent::kActTypeFieldNumber;
const int UserEvent::kMoveEventFieldNumber;
const int UserEvent::kStopEventFieldNumber;
const int UserEvent::kJumpEventFieldNumber;
const int UserEvent::kShootEventFieldNumber;
const int UserEvent::kHitEventFieldNumber;
const int UserEvent::kSpawnEventFieldNumber;
const int UserEvent::kSyncEventFieldNumber;
const int UserEvent::kDeathEventFieldNumber;
const int UserEvent::kChWeaponEventFieldNumber;
const int UserEvent::kItemSpawnEventFieldNumber;
const int UserEvent::kItemGetEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserEvent::UserEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsUserEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.UserEvent)
}
UserEvent::UserEvent(const UserEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_moveevent()) {
    moveevent_ = new ::server2N::EventMove(*from.moveevent_);
  } else {
    moveevent_ = NULL;
  }
  if (from.has_stopevent()) {
    stopevent_ = new ::server2N::EventStop(*from.stopevent_);
  } else {
    stopevent_ = NULL;
  }
  if (from.has_jumpevent()) {
    jumpevent_ = new ::server2N::EventJump(*from.jumpevent_);
  } else {
    jumpevent_ = NULL;
  }
  if (from.has_shootevent()) {
    shootevent_ = new ::server2N::EventShoot(*from.shootevent_);
  } else {
    shootevent_ = NULL;
  }
  if (from.has_hitevent()) {
    hitevent_ = new ::server2N::EventHit(*from.hitevent_);
  } else {
    hitevent_ = NULL;
  }
  if (from.has_spawnevent()) {
    spawnevent_ = new ::server2N::EventSpawn(*from.spawnevent_);
  } else {
    spawnevent_ = NULL;
  }
  if (from.has_syncevent()) {
    syncevent_ = new ::server2N::EventUserSync(*from.syncevent_);
  } else {
    syncevent_ = NULL;
  }
  if (from.has_deathevent()) {
    deathevent_ = new ::server2N::EventDeath(*from.deathevent_);
  } else {
    deathevent_ = NULL;
  }
  if (from.has_chweaponevent()) {
    chweaponevent_ = new ::server2N::EventChangeWeapon(*from.chweaponevent_);
  } else {
    chweaponevent_ = NULL;
  }
  if (from.has_itemspawnevent()) {
    itemspawnevent_ = new ::server2N::EventItemSpawn(*from.itemspawnevent_);
  } else {
    itemspawnevent_ = NULL;
  }
  if (from.has_itemgetevent()) {
    itemgetevent_ = new ::server2N::EventItemGet(*from.itemgetevent_);
  } else {
    itemgetevent_ = NULL;
  }
  acttype_ = from.acttype_;
  // @@protoc_insertion_point(copy_constructor:server2N.UserEvent)
}

void UserEvent::SharedCtor() {
  ::memset(&moveevent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acttype_) -
      reinterpret_cast<char*>(&moveevent_)) + sizeof(acttype_));
  _cached_size_ = 0;
}

UserEvent::~UserEvent() {
  // @@protoc_insertion_point(destructor:server2N.UserEvent)
  SharedDtor();
}

void UserEvent::SharedDtor() {
  if (this != internal_default_instance()) delete moveevent_;
  if (this != internal_default_instance()) delete stopevent_;
  if (this != internal_default_instance()) delete jumpevent_;
  if (this != internal_default_instance()) delete shootevent_;
  if (this != internal_default_instance()) delete hitevent_;
  if (this != internal_default_instance()) delete spawnevent_;
  if (this != internal_default_instance()) delete syncevent_;
  if (this != internal_default_instance()) delete deathevent_;
  if (this != internal_default_instance()) delete chweaponevent_;
  if (this != internal_default_instance()) delete itemspawnevent_;
  if (this != internal_default_instance()) delete itemgetevent_;
}

void UserEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserEvent::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserEvent& UserEvent::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsUserEvent();
  return *internal_default_instance();
}


void UserEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.UserEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && moveevent_ != NULL) {
    delete moveevent_;
  }
  moveevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && stopevent_ != NULL) {
    delete stopevent_;
  }
  stopevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && jumpevent_ != NULL) {
    delete jumpevent_;
  }
  jumpevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && shootevent_ != NULL) {
    delete shootevent_;
  }
  shootevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && hitevent_ != NULL) {
    delete hitevent_;
  }
  hitevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && spawnevent_ != NULL) {
    delete spawnevent_;
  }
  spawnevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && syncevent_ != NULL) {
    delete syncevent_;
  }
  syncevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && deathevent_ != NULL) {
    delete deathevent_;
  }
  deathevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && chweaponevent_ != NULL) {
    delete chweaponevent_;
  }
  chweaponevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && itemspawnevent_ != NULL) {
    delete itemspawnevent_;
  }
  itemspawnevent_ = NULL;
  if (GetArenaNoVirtual() == NULL && itemgetevent_ != NULL) {
    delete itemgetevent_;
  }
  itemgetevent_ = NULL;
  acttype_ = 0;
  _internal_metadata_.Clear();
}

bool UserEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.UserEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .server2N.UserEvent.action actType = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 880 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_acttype(static_cast< ::server2N::UserEvent_action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventMove moveEvent = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_moveevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventStop stopEvent = 112;
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 898 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stopevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventJump jumpEvent = 113;
      case 113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_jumpevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventShoot shootEvent = 114;
      case 114: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shootevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventHit hitEvent = 115;
      case 115: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hitevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventSpawn spawnEvent = 116;
      case 116: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 930 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spawnevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventUserSync syncEvent = 117;
      case 117: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 938 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_syncevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventDeath deathEvent = 118;
      case 118: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deathevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventChangeWeapon chWeaponEvent = 119;
      case 119: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 954 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chweaponevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventItemSpawn itemSpawnEvent = 120;
      case 120: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 962 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_itemspawnevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.EventItemGet itemGetEvent = 121;
      case 121: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_itemgetevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.UserEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.UserEvent)
  return false;
#undef DO_
}

void UserEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.UserEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.UserEvent.action actType = 110;
  if (this->acttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      110, this->acttype(), output);
  }

  // .server2N.EventMove moveEvent = 111;
  if (this->has_moveevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      111, *moveevent_, output);
  }

  // .server2N.EventStop stopEvent = 112;
  if (this->has_stopevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      112, *stopevent_, output);
  }

  // .server2N.EventJump jumpEvent = 113;
  if (this->has_jumpevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      113, *jumpevent_, output);
  }

  // .server2N.EventShoot shootEvent = 114;
  if (this->has_shootevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      114, *shootevent_, output);
  }

  // .server2N.EventHit hitEvent = 115;
  if (this->has_hitevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      115, *hitevent_, output);
  }

  // .server2N.EventSpawn spawnEvent = 116;
  if (this->has_spawnevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      116, *spawnevent_, output);
  }

  // .server2N.EventUserSync syncEvent = 117;
  if (this->has_syncevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      117, *syncevent_, output);
  }

  // .server2N.EventDeath deathEvent = 118;
  if (this->has_deathevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      118, *deathevent_, output);
  }

  // .server2N.EventChangeWeapon chWeaponEvent = 119;
  if (this->has_chweaponevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      119, *chweaponevent_, output);
  }

  // .server2N.EventItemSpawn itemSpawnEvent = 120;
  if (this->has_itemspawnevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      120, *itemspawnevent_, output);
  }

  // .server2N.EventItemGet itemGetEvent = 121;
  if (this->has_itemgetevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      121, *itemgetevent_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.UserEvent)
}

::google::protobuf::uint8* UserEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.UserEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.UserEvent.action actType = 110;
  if (this->acttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      110, this->acttype(), target);
  }

  // .server2N.EventMove moveEvent = 111;
  if (this->has_moveevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        111, *moveevent_, deterministic, target);
  }

  // .server2N.EventStop stopEvent = 112;
  if (this->has_stopevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        112, *stopevent_, deterministic, target);
  }

  // .server2N.EventJump jumpEvent = 113;
  if (this->has_jumpevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        113, *jumpevent_, deterministic, target);
  }

  // .server2N.EventShoot shootEvent = 114;
  if (this->has_shootevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        114, *shootevent_, deterministic, target);
  }

  // .server2N.EventHit hitEvent = 115;
  if (this->has_hitevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        115, *hitevent_, deterministic, target);
  }

  // .server2N.EventSpawn spawnEvent = 116;
  if (this->has_spawnevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        116, *spawnevent_, deterministic, target);
  }

  // .server2N.EventUserSync syncEvent = 117;
  if (this->has_syncevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        117, *syncevent_, deterministic, target);
  }

  // .server2N.EventDeath deathEvent = 118;
  if (this->has_deathevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        118, *deathevent_, deterministic, target);
  }

  // .server2N.EventChangeWeapon chWeaponEvent = 119;
  if (this->has_chweaponevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        119, *chweaponevent_, deterministic, target);
  }

  // .server2N.EventItemSpawn itemSpawnEvent = 120;
  if (this->has_itemspawnevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        120, *itemspawnevent_, deterministic, target);
  }

  // .server2N.EventItemGet itemGetEvent = 121;
  if (this->has_itemgetevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        121, *itemgetevent_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.UserEvent)
  return target;
}

size_t UserEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.UserEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .server2N.EventMove moveEvent = 111;
  if (this->has_moveevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *moveevent_);
  }

  // .server2N.EventStop stopEvent = 112;
  if (this->has_stopevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stopevent_);
  }

  // .server2N.EventJump jumpEvent = 113;
  if (this->has_jumpevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *jumpevent_);
  }

  // .server2N.EventShoot shootEvent = 114;
  if (this->has_shootevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shootevent_);
  }

  // .server2N.EventHit hitEvent = 115;
  if (this->has_hitevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hitevent_);
  }

  // .server2N.EventSpawn spawnEvent = 116;
  if (this->has_spawnevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *spawnevent_);
  }

  // .server2N.EventUserSync syncEvent = 117;
  if (this->has_syncevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *syncevent_);
  }

  // .server2N.EventDeath deathEvent = 118;
  if (this->has_deathevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *deathevent_);
  }

  // .server2N.EventChangeWeapon chWeaponEvent = 119;
  if (this->has_chweaponevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *chweaponevent_);
  }

  // .server2N.EventItemSpawn itemSpawnEvent = 120;
  if (this->has_itemspawnevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *itemspawnevent_);
  }

  // .server2N.EventItemGet itemGetEvent = 121;
  if (this->has_itemgetevent()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *itemgetevent_);
  }

  // .server2N.UserEvent.action actType = 110;
  if (this->acttype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->acttype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.UserEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const UserEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.UserEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.UserEvent)
    MergeFrom(*source);
  }
}

void UserEvent::MergeFrom(const UserEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.UserEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_moveevent()) {
    mutable_moveevent()->::server2N::EventMove::MergeFrom(from.moveevent());
  }
  if (from.has_stopevent()) {
    mutable_stopevent()->::server2N::EventStop::MergeFrom(from.stopevent());
  }
  if (from.has_jumpevent()) {
    mutable_jumpevent()->::server2N::EventJump::MergeFrom(from.jumpevent());
  }
  if (from.has_shootevent()) {
    mutable_shootevent()->::server2N::EventShoot::MergeFrom(from.shootevent());
  }
  if (from.has_hitevent()) {
    mutable_hitevent()->::server2N::EventHit::MergeFrom(from.hitevent());
  }
  if (from.has_spawnevent()) {
    mutable_spawnevent()->::server2N::EventSpawn::MergeFrom(from.spawnevent());
  }
  if (from.has_syncevent()) {
    mutable_syncevent()->::server2N::EventUserSync::MergeFrom(from.syncevent());
  }
  if (from.has_deathevent()) {
    mutable_deathevent()->::server2N::EventDeath::MergeFrom(from.deathevent());
  }
  if (from.has_chweaponevent()) {
    mutable_chweaponevent()->::server2N::EventChangeWeapon::MergeFrom(from.chweaponevent());
  }
  if (from.has_itemspawnevent()) {
    mutable_itemspawnevent()->::server2N::EventItemSpawn::MergeFrom(from.itemspawnevent());
  }
  if (from.has_itemgetevent()) {
    mutable_itemgetevent()->::server2N::EventItemGet::MergeFrom(from.itemgetevent());
  }
  if (from.acttype() != 0) {
    set_acttype(from.acttype());
  }
}

void UserEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.UserEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserEvent::CopyFrom(const UserEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.UserEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserEvent::IsInitialized() const {
  return true;
}

void UserEvent::Swap(UserEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserEvent::InternalSwap(UserEvent* other) {
  using std::swap;
  swap(moveevent_, other->moveevent_);
  swap(stopevent_, other->stopevent_);
  swap(jumpevent_, other->jumpevent_);
  swap(shootevent_, other->shootevent_);
  swap(hitevent_, other->hitevent_);
  swap(spawnevent_, other->spawnevent_);
  swap(syncevent_, other->syncevent_);
  swap(deathevent_, other->deathevent_);
  swap(chweaponevent_, other->chweaponevent_);
  swap(itemspawnevent_, other->itemspawnevent_);
  swap(itemgetevent_, other->itemgetevent_);
  swap(acttype_, other->acttype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserEvent::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PacketBody::InitAsDefaultInstance() {
  ::server2N::_PacketBody_default_instance_._instance.get_mutable()->connect_ = const_cast< ::server2N::UserConnection*>(
      ::server2N::UserConnection::internal_default_instance());
  ::server2N::_PacketBody_default_instance_._instance.get_mutable()->notice_ = const_cast< ::server2N::GlobalNotice*>(
      ::server2N::GlobalNotice::internal_default_instance());
  ::server2N::_PacketBody_default_instance_._instance.get_mutable()->event_ = const_cast< ::server2N::GameEvent*>(
      ::server2N::GameEvent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacketBody::kMsgTypeFieldNumber;
const int PacketBody::kConnectFieldNumber;
const int PacketBody::kNoticeFieldNumber;
const int PacketBody::kEventFieldNumber;
const int PacketBody::kSenderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacketBody::PacketBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsPacketBody();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.PacketBody)
}
PacketBody::PacketBody(const PacketBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_connect()) {
    connect_ = new ::server2N::UserConnection(*from.connect_);
  } else {
    connect_ = NULL;
  }
  if (from.has_event()) {
    event_ = new ::server2N::GameEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  if (from.has_notice()) {
    notice_ = new ::server2N::GlobalNotice(*from.notice_);
  } else {
    notice_ = NULL;
  }
  ::memcpy(&senderid_, &from.senderid_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtype_) -
    reinterpret_cast<char*>(&senderid_)) + sizeof(msgtype_));
  // @@protoc_insertion_point(copy_constructor:server2N.PacketBody)
}

void PacketBody::SharedCtor() {
  ::memset(&connect_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtype_) -
      reinterpret_cast<char*>(&connect_)) + sizeof(msgtype_));
  _cached_size_ = 0;
}

PacketBody::~PacketBody() {
  // @@protoc_insertion_point(destructor:server2N.PacketBody)
  SharedDtor();
}

void PacketBody::SharedDtor() {
  if (this != internal_default_instance()) delete connect_;
  if (this != internal_default_instance()) delete event_;
  if (this != internal_default_instance()) delete notice_;
}

void PacketBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacketBody::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PacketBody& PacketBody::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsPacketBody();
  return *internal_default_instance();
}


void PacketBody::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.PacketBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && connect_ != NULL) {
    delete connect_;
  }
  connect_ = NULL;
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
  if (GetArenaNoVirtual() == NULL && notice_ != NULL) {
    delete notice_;
  }
  notice_ = NULL;
  ::memset(&senderid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtype_) -
      reinterpret_cast<char*>(&senderid_)) + sizeof(msgtype_));
  _internal_metadata_.Clear();
}

bool PacketBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.PacketBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(80010u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .server2N.UserConnection connect = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.GameEvent event = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 senderId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &senderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.PacketBody.messageType msgType = 10000;
      case 10000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 80000 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msgtype(static_cast< ::server2N::PacketBody_messageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.GlobalNotice notice = 10001;
      case 10001: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 80010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_notice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.PacketBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.PacketBody)
  return false;
#undef DO_
}

void PacketBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.PacketBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.UserConnection connect = 6;
  if (this->has_connect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *connect_, output);
  }

  // .server2N.GameEvent event = 7;
  if (this->has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *event_, output);
  }

  // int32 senderId = 8;
  if (this->senderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->senderid(), output);
  }

  // .server2N.PacketBody.messageType msgType = 10000;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10000, this->msgtype(), output);
  }

  // .server2N.GlobalNotice notice = 10001;
  if (this->has_notice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10001, *notice_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.PacketBody)
}

::google::protobuf::uint8* PacketBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.PacketBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.UserConnection connect = 6;
  if (this->has_connect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *connect_, deterministic, target);
  }

  // .server2N.GameEvent event = 7;
  if (this->has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *event_, deterministic, target);
  }

  // int32 senderId = 8;
  if (this->senderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->senderid(), target);
  }

  // .server2N.PacketBody.messageType msgType = 10000;
  if (this->msgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10000, this->msgtype(), target);
  }

  // .server2N.GlobalNotice notice = 10001;
  if (this->has_notice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10001, *notice_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.PacketBody)
  return target;
}

size_t PacketBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.PacketBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .server2N.UserConnection connect = 6;
  if (this->has_connect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *connect_);
  }

  // .server2N.GameEvent event = 7;
  if (this->has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_);
  }

  // .server2N.GlobalNotice notice = 10001;
  if (this->has_notice()) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *notice_);
  }

  // int32 senderId = 8;
  if (this->senderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->senderid());
  }

  // .server2N.PacketBody.messageType msgType = 10000;
  if (this->msgtype() != 0) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacketBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.PacketBody)
  GOOGLE_DCHECK_NE(&from, this);
  const PacketBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.PacketBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.PacketBody)
    MergeFrom(*source);
  }
}

void PacketBody::MergeFrom(const PacketBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.PacketBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_connect()) {
    mutable_connect()->::server2N::UserConnection::MergeFrom(from.connect());
  }
  if (from.has_event()) {
    mutable_event()->::server2N::GameEvent::MergeFrom(from.event());
  }
  if (from.has_notice()) {
    mutable_notice()->::server2N::GlobalNotice::MergeFrom(from.notice());
  }
  if (from.senderid() != 0) {
    set_senderid(from.senderid());
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
}

void PacketBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.PacketBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketBody::CopyFrom(const PacketBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.PacketBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketBody::IsInitialized() const {
  return true;
}

void PacketBody::Swap(PacketBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacketBody::InternalSwap(PacketBody* other) {
  using std::swap;
  swap(connect_, other->connect_);
  swap(event_, other->event_);
  swap(notice_, other->notice_);
  swap(senderid_, other->senderid_);
  swap(msgtype_, other->msgtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PacketBody::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace server2N
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::GlobalNotice* Arena::Create< ::server2N::GlobalNotice >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::GlobalNotice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::UserConnection* Arena::Create< ::server2N::UserConnection >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::UserConnection >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::EventMove* Arena::Create< ::server2N::EventMove >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::EventMove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::EventStop* Arena::Create< ::server2N::EventStop >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::EventStop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::EventJump* Arena::Create< ::server2N::EventJump >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::EventJump >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::EventShoot* Arena::Create< ::server2N::EventShoot >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::EventShoot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::EventHit* Arena::Create< ::server2N::EventHit >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::EventHit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::EventChangeWeapon* Arena::Create< ::server2N::EventChangeWeapon >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::EventChangeWeapon >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::EventSpawn* Arena::Create< ::server2N::EventSpawn >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::EventSpawn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::EventUserSync* Arena::Create< ::server2N::EventUserSync >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::EventUserSync >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::EventDeath* Arena::Create< ::server2N::EventDeath >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::EventDeath >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::EventItemSpawn* Arena::Create< ::server2N::EventItemSpawn >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::EventItemSpawn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::EventItemGet* Arena::Create< ::server2N::EventItemGet >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::EventItemGet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::RequestUserInfo* Arena::Create< ::server2N::RequestUserInfo >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::RequestUserInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::InfoItem* Arena::Create< ::server2N::InfoItem >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::InfoItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::GameEvent* Arena::Create< ::server2N::GameEvent >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::GameEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::SystemEvent* Arena::Create< ::server2N::SystemEvent >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::SystemEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::UserEvent* Arena::Create< ::server2N::UserEvent >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::UserEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::PacketBody* Arena::Create< ::server2N::PacketBody >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::PacketBody >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
