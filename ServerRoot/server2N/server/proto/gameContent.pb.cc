// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gameContent.proto

#include "gameContent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace server2N {
class UserConnectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserConnection>
      _instance;
} _UserConnection_default_instance_;
class GameEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameEvent>
      _instance;
} _GameEvent_default_instance_;
class PacketBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PacketBody>
      _instance;
} _PacketBody_default_instance_;
}  // namespace server2N
namespace protobuf_gameContent_2eproto {
void InitDefaultsUserConnectionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_UserConnection_default_instance_;
    new (ptr) ::server2N::UserConnection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::UserConnection::InitAsDefaultInstance();
}

void InitDefaultsUserConnection() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserConnectionImpl);
}

void InitDefaultsGameEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::server2N::_GameEvent_default_instance_;
    new (ptr) ::server2N::GameEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::GameEvent::InitAsDefaultInstance();
}

void InitDefaultsGameEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameEventImpl);
}

void InitDefaultsPacketBodyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gameContent_2eproto::InitDefaultsUserConnection();
  protobuf_gameContent_2eproto::InitDefaultsGameEvent();
  {
    void* ptr = &::server2N::_PacketBody_default_instance_;
    new (ptr) ::server2N::PacketBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2N::PacketBody::InitAsDefaultInstance();
}

void InitDefaultsPacketBody() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPacketBodyImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserConnection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserConnection, connectorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::UserConnection, contype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, act_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, actionproperty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, eventpositionx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, eventpositiony_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, velocityx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, velocityy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::GameEvent, invokerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::PacketBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::PacketBody, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::PacketBody, connect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::PacketBody, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2N::PacketBody, senderid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::server2N::UserConnection)},
  { 7, -1, sizeof(::server2N::GameEvent)},
  { 19, -1, sizeof(::server2N::PacketBody)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_UserConnection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_GameEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2N::_PacketBody_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gameContent.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021gameContent.proto\022\010server2N\"\276\001\n\016UserCo"
      "nnection\022\023\n\013connectorId\030\001 \001(\005\0228\n\007conType"
      "\030\002 \001(\0162\'.server2N.UserConnection.Connect"
      "ionType\"]\n\016ConnectionType\022\013\n\007Nothing\020\000\022\013"
      "\n\007Connect\020\001\022\016\n\nTryConnect\020\002\022\021\n\rAcceptCon"
      "nect\020\003\022\016\n\nDisConnect\020\004\"\214\002\n\tGameEvent\022\'\n\003"
      "act\030\003 \001(\0162\032.server2N.GameEvent.action\022\026\n"
      "\016actionProperty\030\005 \001(\005\022\026\n\016EventPositionX\030"
      "\006 \001(\002\022\026\n\016EventPositionY\030\007 \001(\002\022\021\n\tVelocit"
      "yX\030\010 \001(\002\022\021\n\tVelocityY\030\t \001(\002\022\021\n\tinvokerId"
      "\030\n \001(\005\"U\n\006action\022\013\n\007Nothing\020\000\022\010\n\004Move\020d\022"
      "\010\n\004Stop\020e\022\010\n\004Jump\020f\022\t\n\005Shoot\020g\022\n\n\006GetHit"
      "\020h\022\t\n\005Spawn\020i\"\324\001\n\nPacketBody\0222\n\007msgType\030"
      "\220N \001(\0162 .server2N.PacketBody.messageType"
      "\022)\n\007connect\030\006 \001(\0132\030.server2N.UserConnect"
      "ion\022\"\n\005event\030\007 \001(\0132\023.server2N.GameEvent\022"
      "\020\n\010senderId\030\010 \001(\005\"1\n\013messageType\022\r\n\tGame"
      "Event\020\000\022\023\n\016UserConnection\020\220Nb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 716);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gameContent.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gameContent_2eproto
namespace server2N {
const ::google::protobuf::EnumDescriptor* UserConnection_ConnectionType_descriptor() {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gameContent_2eproto::file_level_enum_descriptors[0];
}
bool UserConnection_ConnectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserConnection_ConnectionType UserConnection::Nothing;
const UserConnection_ConnectionType UserConnection::Connect;
const UserConnection_ConnectionType UserConnection::TryConnect;
const UserConnection_ConnectionType UserConnection::AcceptConnect;
const UserConnection_ConnectionType UserConnection::DisConnect;
const UserConnection_ConnectionType UserConnection::ConnectionType_MIN;
const UserConnection_ConnectionType UserConnection::ConnectionType_MAX;
const int UserConnection::ConnectionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GameEvent_action_descriptor() {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gameContent_2eproto::file_level_enum_descriptors[1];
}
bool GameEvent_action_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GameEvent_action GameEvent::Nothing;
const GameEvent_action GameEvent::Move;
const GameEvent_action GameEvent::Stop;
const GameEvent_action GameEvent::Jump;
const GameEvent_action GameEvent::Shoot;
const GameEvent_action GameEvent::GetHit;
const GameEvent_action GameEvent::Spawn;
const GameEvent_action GameEvent::action_MIN;
const GameEvent_action GameEvent::action_MAX;
const int GameEvent::action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PacketBody_messageType_descriptor() {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gameContent_2eproto::file_level_enum_descriptors[2];
}
bool PacketBody_messageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 10000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PacketBody_messageType PacketBody::GameEvent;
const PacketBody_messageType PacketBody::UserConnection;
const PacketBody_messageType PacketBody::messageType_MIN;
const PacketBody_messageType PacketBody::messageType_MAX;
const int PacketBody::messageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void UserConnection::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserConnection::kConnectorIdFieldNumber;
const int UserConnection::kConTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserConnection::UserConnection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsUserConnection();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.UserConnection)
}
UserConnection::UserConnection(const UserConnection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&connectorid_, &from.connectorid_,
    static_cast<size_t>(reinterpret_cast<char*>(&contype_) -
    reinterpret_cast<char*>(&connectorid_)) + sizeof(contype_));
  // @@protoc_insertion_point(copy_constructor:server2N.UserConnection)
}

void UserConnection::SharedCtor() {
  ::memset(&connectorid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&contype_) -
      reinterpret_cast<char*>(&connectorid_)) + sizeof(contype_));
  _cached_size_ = 0;
}

UserConnection::~UserConnection() {
  // @@protoc_insertion_point(destructor:server2N.UserConnection)
  SharedDtor();
}

void UserConnection::SharedDtor() {
}

void UserConnection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserConnection::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserConnection& UserConnection::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsUserConnection();
  return *internal_default_instance();
}


void UserConnection::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.UserConnection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&connectorid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&contype_) -
      reinterpret_cast<char*>(&connectorid_)) + sizeof(contype_));
  _internal_metadata_.Clear();
}

bool UserConnection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.UserConnection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 connectorId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connectorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.UserConnection.ConnectionType conType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_contype(static_cast< ::server2N::UserConnection_ConnectionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.UserConnection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.UserConnection)
  return false;
#undef DO_
}

void UserConnection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.UserConnection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 connectorId = 1;
  if (this->connectorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->connectorid(), output);
  }

  // .server2N.UserConnection.ConnectionType conType = 2;
  if (this->contype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->contype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.UserConnection)
}

::google::protobuf::uint8* UserConnection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.UserConnection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 connectorId = 1;
  if (this->connectorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->connectorid(), target);
  }

  // .server2N.UserConnection.ConnectionType conType = 2;
  if (this->contype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->contype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.UserConnection)
  return target;
}

size_t UserConnection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.UserConnection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 connectorId = 1;
  if (this->connectorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->connectorid());
  }

  // .server2N.UserConnection.ConnectionType conType = 2;
  if (this->contype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->contype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserConnection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.UserConnection)
  GOOGLE_DCHECK_NE(&from, this);
  const UserConnection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserConnection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.UserConnection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.UserConnection)
    MergeFrom(*source);
  }
}

void UserConnection::MergeFrom(const UserConnection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.UserConnection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connectorid() != 0) {
    set_connectorid(from.connectorid());
  }
  if (from.contype() != 0) {
    set_contype(from.contype());
  }
}

void UserConnection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.UserConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserConnection::CopyFrom(const UserConnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.UserConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserConnection::IsInitialized() const {
  return true;
}

void UserConnection::Swap(UserConnection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserConnection::InternalSwap(UserConnection* other) {
  using std::swap;
  swap(connectorid_, other->connectorid_);
  swap(contype_, other->contype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserConnection::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameEvent::kActFieldNumber;
const int GameEvent::kActionPropertyFieldNumber;
const int GameEvent::kEventPositionXFieldNumber;
const int GameEvent::kEventPositionYFieldNumber;
const int GameEvent::kVelocityXFieldNumber;
const int GameEvent::kVelocityYFieldNumber;
const int GameEvent::kInvokerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameEvent::GameEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsGameEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.GameEvent)
}
GameEvent::GameEvent(const GameEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&act_, &from.act_,
    static_cast<size_t>(reinterpret_cast<char*>(&velocityy_) -
    reinterpret_cast<char*>(&act_)) + sizeof(velocityy_));
  // @@protoc_insertion_point(copy_constructor:server2N.GameEvent)
}

void GameEvent::SharedCtor() {
  ::memset(&act_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&velocityy_) -
      reinterpret_cast<char*>(&act_)) + sizeof(velocityy_));
  _cached_size_ = 0;
}

GameEvent::~GameEvent() {
  // @@protoc_insertion_point(destructor:server2N.GameEvent)
  SharedDtor();
}

void GameEvent::SharedDtor() {
}

void GameEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameEvent::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameEvent& GameEvent::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsGameEvent();
  return *internal_default_instance();
}


void GameEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.GameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&act_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&velocityy_) -
      reinterpret_cast<char*>(&act_)) + sizeof(velocityy_));
  _internal_metadata_.Clear();
}

bool GameEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.GameEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .server2N.GameEvent.action act = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_act(static_cast< ::server2N::GameEvent_action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 actionProperty = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actionproperty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float EventPositionX = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &eventpositionx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float EventPositionY = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &eventpositiony_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float VelocityX = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &velocityx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float VelocityY = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &velocityy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 invokerId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invokerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.GameEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.GameEvent)
  return false;
#undef DO_
}

void GameEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.GameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.GameEvent.action act = 3;
  if (this->act() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->act(), output);
  }

  // int32 actionProperty = 5;
  if (this->actionproperty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->actionproperty(), output);
  }

  // float EventPositionX = 6;
  if (this->eventpositionx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->eventpositionx(), output);
  }

  // float EventPositionY = 7;
  if (this->eventpositiony() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->eventpositiony(), output);
  }

  // float VelocityX = 8;
  if (this->velocityx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->velocityx(), output);
  }

  // float VelocityY = 9;
  if (this->velocityy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->velocityy(), output);
  }

  // int32 invokerId = 10;
  if (this->invokerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->invokerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.GameEvent)
}

::google::protobuf::uint8* GameEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.GameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.GameEvent.action act = 3;
  if (this->act() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->act(), target);
  }

  // int32 actionProperty = 5;
  if (this->actionproperty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->actionproperty(), target);
  }

  // float EventPositionX = 6;
  if (this->eventpositionx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->eventpositionx(), target);
  }

  // float EventPositionY = 7;
  if (this->eventpositiony() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->eventpositiony(), target);
  }

  // float VelocityX = 8;
  if (this->velocityx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->velocityx(), target);
  }

  // float VelocityY = 9;
  if (this->velocityy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->velocityy(), target);
  }

  // int32 invokerId = 10;
  if (this->invokerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->invokerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.GameEvent)
  return target;
}

size_t GameEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.GameEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .server2N.GameEvent.action act = 3;
  if (this->act() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->act());
  }

  // int32 actionProperty = 5;
  if (this->actionproperty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actionproperty());
  }

  // float EventPositionX = 6;
  if (this->eventpositionx() != 0) {
    total_size += 1 + 4;
  }

  // float EventPositionY = 7;
  if (this->eventpositiony() != 0) {
    total_size += 1 + 4;
  }

  // int32 invokerId = 10;
  if (this->invokerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->invokerid());
  }

  // float VelocityX = 8;
  if (this->velocityx() != 0) {
    total_size += 1 + 4;
  }

  // float VelocityY = 9;
  if (this->velocityy() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.GameEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const GameEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.GameEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.GameEvent)
    MergeFrom(*source);
  }
}

void GameEvent::MergeFrom(const GameEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.GameEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.act() != 0) {
    set_act(from.act());
  }
  if (from.actionproperty() != 0) {
    set_actionproperty(from.actionproperty());
  }
  if (from.eventpositionx() != 0) {
    set_eventpositionx(from.eventpositionx());
  }
  if (from.eventpositiony() != 0) {
    set_eventpositiony(from.eventpositiony());
  }
  if (from.invokerid() != 0) {
    set_invokerid(from.invokerid());
  }
  if (from.velocityx() != 0) {
    set_velocityx(from.velocityx());
  }
  if (from.velocityy() != 0) {
    set_velocityy(from.velocityy());
  }
}

void GameEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.GameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameEvent::CopyFrom(const GameEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.GameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameEvent::IsInitialized() const {
  return true;
}

void GameEvent::Swap(GameEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameEvent::InternalSwap(GameEvent* other) {
  using std::swap;
  swap(act_, other->act_);
  swap(actionproperty_, other->actionproperty_);
  swap(eventpositionx_, other->eventpositionx_);
  swap(eventpositiony_, other->eventpositiony_);
  swap(invokerid_, other->invokerid_);
  swap(velocityx_, other->velocityx_);
  swap(velocityy_, other->velocityy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameEvent::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PacketBody::InitAsDefaultInstance() {
  ::server2N::_PacketBody_default_instance_._instance.get_mutable()->connect_ = const_cast< ::server2N::UserConnection*>(
      ::server2N::UserConnection::internal_default_instance());
  ::server2N::_PacketBody_default_instance_._instance.get_mutable()->event_ = const_cast< ::server2N::GameEvent*>(
      ::server2N::GameEvent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacketBody::kMsgTypeFieldNumber;
const int PacketBody::kConnectFieldNumber;
const int PacketBody::kEventFieldNumber;
const int PacketBody::kSenderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacketBody::PacketBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gameContent_2eproto::InitDefaultsPacketBody();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2N.PacketBody)
}
PacketBody::PacketBody(const PacketBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_connect()) {
    connect_ = new ::server2N::UserConnection(*from.connect_);
  } else {
    connect_ = NULL;
  }
  if (from.has_event()) {
    event_ = new ::server2N::GameEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  ::memcpy(&senderid_, &from.senderid_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtype_) -
    reinterpret_cast<char*>(&senderid_)) + sizeof(msgtype_));
  // @@protoc_insertion_point(copy_constructor:server2N.PacketBody)
}

void PacketBody::SharedCtor() {
  ::memset(&connect_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtype_) -
      reinterpret_cast<char*>(&connect_)) + sizeof(msgtype_));
  _cached_size_ = 0;
}

PacketBody::~PacketBody() {
  // @@protoc_insertion_point(destructor:server2N.PacketBody)
  SharedDtor();
}

void PacketBody::SharedDtor() {
  if (this != internal_default_instance()) delete connect_;
  if (this != internal_default_instance()) delete event_;
}

void PacketBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacketBody::descriptor() {
  ::protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PacketBody& PacketBody::default_instance() {
  ::protobuf_gameContent_2eproto::InitDefaultsPacketBody();
  return *internal_default_instance();
}


void PacketBody::Clear() {
// @@protoc_insertion_point(message_clear_start:server2N.PacketBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && connect_ != NULL) {
    delete connect_;
  }
  connect_ = NULL;
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
  ::memset(&senderid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtype_) -
      reinterpret_cast<char*>(&senderid_)) + sizeof(msgtype_));
  _internal_metadata_.Clear();
}

bool PacketBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2N.PacketBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(80000u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .server2N.UserConnection connect = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.GameEvent event = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 senderId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &senderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .server2N.PacketBody.messageType msgType = 10000;
      case 10000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 80000 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msgtype(static_cast< ::server2N::PacketBody_messageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2N.PacketBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2N.PacketBody)
  return false;
#undef DO_
}

void PacketBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2N.PacketBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.UserConnection connect = 6;
  if (this->has_connect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *connect_, output);
  }

  // .server2N.GameEvent event = 7;
  if (this->has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *event_, output);
  }

  // int32 senderId = 8;
  if (this->senderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->senderid(), output);
  }

  // .server2N.PacketBody.messageType msgType = 10000;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10000, this->msgtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:server2N.PacketBody)
}

::google::protobuf::uint8* PacketBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2N.PacketBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .server2N.UserConnection connect = 6;
  if (this->has_connect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *connect_, deterministic, target);
  }

  // .server2N.GameEvent event = 7;
  if (this->has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *event_, deterministic, target);
  }

  // int32 senderId = 8;
  if (this->senderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->senderid(), target);
  }

  // .server2N.PacketBody.messageType msgType = 10000;
  if (this->msgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10000, this->msgtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2N.PacketBody)
  return target;
}

size_t PacketBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2N.PacketBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .server2N.UserConnection connect = 6;
  if (this->has_connect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *connect_);
  }

  // .server2N.GameEvent event = 7;
  if (this->has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_);
  }

  // int32 senderId = 8;
  if (this->senderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->senderid());
  }

  // .server2N.PacketBody.messageType msgType = 10000;
  if (this->msgtype() != 0) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacketBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2N.PacketBody)
  GOOGLE_DCHECK_NE(&from, this);
  const PacketBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2N.PacketBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2N.PacketBody)
    MergeFrom(*source);
  }
}

void PacketBody::MergeFrom(const PacketBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2N.PacketBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_connect()) {
    mutable_connect()->::server2N::UserConnection::MergeFrom(from.connect());
  }
  if (from.has_event()) {
    mutable_event()->::server2N::GameEvent::MergeFrom(from.event());
  }
  if (from.senderid() != 0) {
    set_senderid(from.senderid());
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
}

void PacketBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2N.PacketBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketBody::CopyFrom(const PacketBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2N.PacketBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketBody::IsInitialized() const {
  return true;
}

void PacketBody::Swap(PacketBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacketBody::InternalSwap(PacketBody* other) {
  using std::swap;
  swap(connect_, other->connect_);
  swap(event_, other->event_);
  swap(senderid_, other->senderid_);
  swap(msgtype_, other->msgtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PacketBody::GetMetadata() const {
  protobuf_gameContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gameContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace server2N
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::UserConnection* Arena::Create< ::server2N::UserConnection >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::UserConnection >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::GameEvent* Arena::Create< ::server2N::GameEvent >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::GameEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2N::PacketBody* Arena::Create< ::server2N::PacketBody >(Arena* arena) {
  return Arena::CreateInternal< ::server2N::PacketBody >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
